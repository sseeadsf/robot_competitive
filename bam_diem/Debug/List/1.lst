
AVRASM ver. 2.1.30  C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm Sun Feb 04 12:22:06 2018

C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1086): warning: Register r5 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1087): warning: Register r4 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1088): warning: Register r7 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1089): warning: Register r8 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1090): warning: Register r9 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1091): warning: Register r10 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1092): warning: Register r11 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1093): warning: Register r12 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1094): warning: Register r13 already defined by the .DEF directive
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1095): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Send_Add=R5
                 	.DEF _Receive_Add=R4
                 	.DEF _Salt_Add=R7
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 	.DEF _j=R10
                 	.DEF _j_msb=R11
                 	.DEF _milisecond=R12
                 	.DEF _milisecond_msb=R13
                 	.DEF _blue=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c15d      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c2fa      	RJMP _timer0_interrupt
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 5f00
000019 0000
00001a 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000105 0100
000106 0703
000107 1f0f
000108 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1188): warning: .cseg .db misalignment - padding zero byte
000109 00ff      	.DB  0xFF
                 _tbl10_G103:
00010a 2710
00010b 03e8
00010c 0064
00010d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00010e 0001      	.DB  0x1,0x0
                 _tbl16_G103:
00010f 1000
000110 0100
000111 0010
000112 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000113 b1b1
000114 ab00      	.DB  0xB1,0xB1,0x0,0xAB
000115 0000
000116 0000      	.DB  0x0,0x0,0x0,0x0
000117 0064      	.DB  0x64,0x0
                 
                 _0x5A:
000118 3b37
000119 3e3d      	.DB  0x37,0x3B,0x3D,0x3E
                 _0x5B:
00011a 0009
00011b 0000
00011c 0000
00011d 000a      	.DB  0x9,0x0,0x0,0x0,0x0,0x0,0xA,0x0
00011e 0005
00011f 0000
000120 0000
000121 0001      	.DB  0x5,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000122 0006
000123 0000
000124 0000
000125 0002      	.DB  0x6,0x0,0x0,0x0,0x0,0x0,0x2,0x0
000126 0007
000127 0000
000128 0000
000129 0003      	.DB  0x7,0x0,0x0,0x0,0x0,0x0,0x3,0x0
00012a 0008
00012b 0000
00012c 0000
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00012d 0004      	.DB  0x8,0x0,0x0,0x0,0x0,0x0,0x4
                 _0x5C:
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1210): warning: .cseg .db misalignment - padding zero byte
00012e 00b4      	.DB  0xB4
                 _0x0:
00012f 6c62
000130 6575
000131 7200
000132 6465      	.DB  0x62,0x6C,0x75,0x65,0x0,0x72,0x65,0x64
000133 6300
000134 6168
000135 206d
000136 6964      	.DB  0x0,0x63,0x68,0x61,0x6D,0x20,0x64,0x69
000137 6d65
000138 7400
000139 2075
00013a 6f64      	.DB  0x65,0x6D,0x0,0x74,0x75,0x20,0x64,0x6F
00013b 676e
00013c 2500
00013d 2064
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1215): warning: .cseg .db misalignment - padding zero byte
00013e 0000      	.DB  0x6E,0x67,0x0,0x25,0x64,0x20,0x0
                 _0x2100060:
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1217): warning: .cseg .db misalignment - padding zero byte
00013f 0001      	.DB  0x1
                 _0x2100000:
000140 4e2d
000141 4e41
000142 4900
000143 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Admin\Downloads\Code\bam_diem\Debug\List\1.asm(1220): warning: .cseg .db misalignment - padding zero byte
000144 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000145 000a      	.DW  0x0A
000146 0004      	.DW  0x04
000147 0226      	.DW  __REG_VARS*2
                 
000148 0004      	.DW  0x04
000149 0198      	.DW  _key_quet
00014a 0230      	.DW  _0x5A*2
                 
00014b 0001      	.DW  0x01
00014c 01b0      	.DW  _second
00014d 025c      	.DW  _0x5C*2
                 
00014e 0005      	.DW  0x05
00014f 0160      	.DW  _0x6F
000150 025e      	.DW  _0x0*2
                 
000151 0004      	.DW  0x04
000152 0165      	.DW  _0x6F+5
000153 0263      	.DW  _0x0*2+5
                 
000154 000a      	.DW  0x0A
000155 0169      	.DW  _0xA0
000156 0267      	.DW  _0x0*2+9
                 
000157 0008      	.DW  0x08
000158 0173      	.DW  _0xA0+10
000159 0271      	.DW  _0x0*2+19
                 
00015a 0001      	.DW  0x01
00015b 03b9      	.DW  __seed_G108
00015c 027e      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
00015d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00015e 94f8      	CLI
00015f 27ee      	CLR  R30
000160 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000161 e0f1      	LDI  R31,1
000162 bffb      	OUT  GICR,R31
000163 bfeb      	OUT  GICR,R30
000164 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000165 e08d      	LDI  R24,(14-2)+1
000166 e0a2      	LDI  R26,2
000167 27bb      	CLR  R27
                 __CLEAR_REG:
000168 93ed      	ST   X+,R30
000169 958a      	DEC  R24
00016a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00016b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00016c e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00016d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00016e 93ed      	ST   X+,R30
00016f 9701      	SBIW R24,1
000170 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000171 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000172 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000173 9185      	LPM  R24,Z+
000174 9195      	LPM  R25,Z+
000175 9700      	SBIW R24,0
000176 f061      	BREQ __GLOBAL_INI_END
000177 91a5      	LPM  R26,Z+
000178 91b5      	LPM  R27,Z+
000179 9005      	LPM  R0,Z+
00017a 9015      	LPM  R1,Z+
00017b 01bf      	MOVW R22,R30
00017c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00017d 9005      	LPM  R0,Z+
00017e 920d      	ST   X+,R0
00017f 9701      	SBIW R24,1
000180 f7e1      	BRNE __GLOBAL_INI_LOOP
000181 01fb      	MOVW R30,R22
000182 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000183 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000184 bfed      	OUT  SPL,R30
000185 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000186 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000187 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000188 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000189 c1a9      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdbool.h>
                 ;
                 ;#define CE PORTB.0
                 ;#define CSN PORTB.1
                 ;#define SCK PORTB.5
                 ;#define MOSI PORTB.3
                 ;#define MISO PINB.4
                 ;#define IRQ PINB.7
                 ;char Send_Add = 0xB1, Receive_Add = 0xB1, Salt_Add = 0xAB;
                 ;#include "rf.c"
                 ;#define CONFIG      	0x00
                 ;#define EN_AA       	0x01
                 ;#define EN_RXADDR   	0x02
                 ;#define SETUP_AW    	0x03
                 ;#define SETUP_RETR  	0x04
                 ;#define RF_CH       	0x05
                 ;#define RF_SETUP    	0x06
                 ;#define STATUS  		0x07
                 ;#define OBSERVE_TX  	0x08
                 ;#define RPD          	0x09
                 ;#define RX_ADDR_P0  	0x0A
                 ;#define RX_ADDR_P1  	0x0B
                 ;#define RX_ADDR_P2  	0x0C
                 ;#define RX_ADDR_P3  	0x0D
                 ;#define RX_ADDR_P4  	0x0E
                 ;#define RX_ADDR_P5  	0x0F
                 ;#define TX_ADDR     	0x10
                 ;#define RX_PW_P0    	0x11
                 ;#define RX_PW_P1    	0x12
                 ;#define RX_PW_P2    	0x13
                 ;#define RX_PW_P3    	0x14
                 ;#define RX_PW_P4    	0x15
                 ;#define RX_PW_P5    	0x16
                 ;#define FIFO_STATUS 	0x17
                 ;#define DYNPD	    	0x1C
                 ;#define FEATURE	    	0x1D
                 ;
                 ;void SPI_Write(unsigned char Buff){
                 ; 0000 0010 void SPI_Write(unsigned char Buff){
                 
                 	.CSEG
                 _SPI_Write:
                 ; .FSTART _SPI_Write
                 ;    unsigned char bit_ctr;
                 ;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
00018a d8de      	RCALL SUBOPT_0x0
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
00018b e010      	LDI  R17,LOW(0)
                 _0x4:
00018c 3018      	CPI  R17,8
00018d f4c8      	BRSH _0x5
                 ;        MOSI = (Buff & 0x80);
00018e 81e9      	LDD  R30,Y+1
00018f 78e0      	ANDI R30,LOW(0x80)
000190 f411      	BRNE _0x6
000191 98c3      	CBI  0x18,3
000192 c001      	RJMP _0x7
                 _0x6:
000193 9ac3      	SBI  0x18,3
                 _0x7:
                 ;        delay_us(5);
                +
000194 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000195 958a     +DEC R24
000196 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ;        Buff = (Buff << 1);
000197 81e9      	LDD  R30,Y+1
000198 0fee      	LSL  R30
000199 83e9      	STD  Y+1,R30
                 ;        SCK = 1;
00019a 9ac5      	SBI  0x18,5
                 ;        delay_us(5);
                +
00019b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00019c 958a     +DEC R24
00019d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
                 ;        Buff |= MISO;
00019e e0e0      	LDI  R30,0
00019f 99b4      	SBIC 0x16,4
0001a0 e0e1      	LDI  R30,1
0001a1 81a9      	LDD  R26,Y+1
0001a2 2bea      	OR   R30,R26
0001a3 83e9      	STD  Y+1,R30
                 ;        SCK = 0;
0001a4 98c5      	CBI  0x18,5
                 ;    }
0001a5 5f1f      	SUBI R17,-1
0001a6 cfe5      	RJMP _0x4
                 _0x5:
                 ;}
0001a7 8118      	LDD  R17,Y+0
0001a8 c860      	RJMP _0x2120003
                 ; .FEND
                 ;
                 ;unsigned char SPI_Read(void){
                 ;    unsigned char Buff=0;
                 ;    unsigned char bit_ctr;
                 ;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
                 ;        delay_us(5);
                 ;        Buff = (Buff << 1);
                 ;        SCK = 1;
                 ;        delay_us(5);
                 ;        Buff |= MISO;
                 ;        SCK = 0;
                 ;    }
                 ;    return(Buff);
                 ;}
                 ;
                 ;
                 ;void RF_Command(unsigned char command){
                 _RF_Command:
                 ; .FSTART _RF_Command
                 ;    CSN=0;
0001a9 d8c2      	RCALL SUBOPT_0x1
                 ;	command -> Y+0
                 ;    SPI_Write(command);
0001aa d8c4      	RCALL SUBOPT_0x2
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
0001ab c2ba      	RJMP _0x212000B
                 ; .FEND
                 ;
                 ;
                 ;void RF_Write(unsigned char Reg_Add, unsigned char Value){
                 _RF_Write:
                 ; .FSTART _RF_Write
                 ;    CSN=0;
0001ac d8bf      	RCALL SUBOPT_0x1
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    SPI_Write(0b00100000|Reg_Add);
0001ad d8c8      	RCALL SUBOPT_0x3
                 ;    SPI_Write(Value);
0001ae d8c0      	RCALL SUBOPT_0x2
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
0001af c859      	RJMP _0x2120003
                 ; .FEND
                 ;
                 ;void RF_Write_Add(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
                 ;{
                 _RF_Write_Add:
                 ; .FSTART _RF_Write_Add
                 ;    CSN=0;
0001b0 d8bb      	RCALL SUBOPT_0x1
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    SPI_Write(0b00100000|Reg_Add);
0001b1 d8c4      	RCALL SUBOPT_0x3
                 ;    SPI_Write(Salt_Add);
0001b2 2da7      	MOV  R26,R7
0001b3 d8c6      	RCALL SUBOPT_0x4
                 ;    SPI_Write(Value);
0001b4 d8c5      	RCALL SUBOPT_0x4
                 ;    SPI_Write(Value);
0001b5 d8c4      	RCALL SUBOPT_0x4
                 ;    SPI_Write(Value);
0001b6 d8c3      	RCALL SUBOPT_0x4
                 ;    SPI_Write(Value);
0001b7 d8c5      	RCALL SUBOPT_0x5
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
0001b8 c850      	RJMP _0x2120003
                 ; .FEND
                 ;
                 ;void TX_Address(unsigned char Address){
                 _TX_Address:
                 ; .FSTART _TX_Address
                 ;    CSN=0;
0001b9 d8b2      	RCALL SUBOPT_0x1
                 ;	Address -> Y+0
                 ;    RF_Write(SETUP_AW,0b00000011);
0001ba e0e3      	LDI  R30,LOW(3)
0001bb 93ea      	ST   -Y,R30
0001bc e0a3      	LDI  R26,LOW(3)
0001bd dfee      	RCALL _RF_Write
                 ;    CSN=1;
0001be d8c4      	RCALL SUBOPT_0x6
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    //RF_Write_Add(RX_ADDR_P0, Address);
                 ;    RF_Write_Add(TX_ADDR, Address);
0001bf e1e0      	LDI  R30,LOW(16)
0001c0 93ea      	ST   -Y,R30
0001c1 81a9      	LDD  R26,Y+1
0001c2 dfed      	RCALL _RF_Write_Add
                 ;}
0001c3 c2a2      	RJMP _0x212000B
                 ; .FEND
                 ;
                 ;void RX_Address(unsigned char Address){
                 ;    CSN=0;
                 ;	Address -> Y+0
                 ;    RF_Write(SETUP_AW,0b00000011);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    RF_Write_Add(RX_ADDR_P0, Address);
                 ;    //RF_Write_Add(RX_PW_P0, Address);
                 ;}
                 ;
                 ;
                 ;void Common_Config(){
                 _Common_Config:
                 ; .FSTART _Common_Config
                 ;    CE=0;
0001c4 98c0      	CBI  0x18,0
                 ;    CSN=1;
0001c5 9ac1      	SBI  0x18,1
                 ;    SCK=0;
0001c6 98c5      	CBI  0x18,5
                 ;    delay_us(10);
0001c7 d8c1      	RCALL SUBOPT_0x7
                 ;    RF_Write(STATUS,0b01111110);
0001c8 d8c6      	RCALL SUBOPT_0x8
                 ;    RF_Command(0b11100010);
0001c9 eea2      	LDI  R26,LOW(226)
0001ca dfde      	RCALL _RF_Command
                 ;    RF_Write(CONFIG,0b00011111);
0001cb d8c5      	RCALL SUBOPT_0x9
0001cc e1af      	LDI  R26,LOW(31)
0001cd dfde      	RCALL _RF_Write
                 ;    delay_ms(2);
0001ce d8c5      	RCALL SUBOPT_0xA
0001cf da3e      	RCALL _delay_ms
                 ;    RF_Write(STATUS,0b01111110);
0001d0 d8c6      	RCALL SUBOPT_0xB
                 ;    RF_Write(FEATURE, 0b00000100);
0001d1 e1ed      	LDI  R30,LOW(29)
0001d2 93ea      	ST   -Y,R30
0001d3 e0a4      	LDI  R26,LOW(4)
0001d4 dfd7      	RCALL _RF_Write
                 ;    RF_Write(RF_CH,0b00000010);
0001d5 e0e5      	LDI  R30,LOW(5)
0001d6 93ea      	ST   -Y,R30
0001d7 e0a2      	LDI  R26,LOW(2)
0001d8 dfd3      	RCALL _RF_Write
                 ;    RF_Write(RF_SETUP, 0b00000110);
0001d9 e0e6      	LDI  R30,LOW(6)
0001da 93ea      	ST   -Y,R30
0001db e0a6      	LDI  R26,LOW(6)
0001dc dfcf      	RCALL _RF_Write
                 ;    RF_Write(DYNPD,0b00000001);
0001dd e1ec      	LDI  R30,LOW(28)
0001de 93ea      	ST   -Y,R30
0001df e0a1      	LDI  R26,LOW(1)
0001e0 dfcb      	RCALL _RF_Write
                 ;    RF_Write(EN_RXADDR,0b00000001);
0001e1 e0e2      	LDI  R30,LOW(2)
0001e2 93ea      	ST   -Y,R30
0001e3 e0a1      	LDI  R26,LOW(1)
0001e4 c00b      	RJMP _0x212000C
                 ;}
                 ; .FEND
                 ;
                 ;void Common_Init(){
                 _Common_Init:
                 ; .FSTART _Common_Init
                 ;    CE=1;
0001e5 9ac0      	SBI  0x18,0
                 ;    delay_us(700);
                +
0001e6 e788     +LDI R24 , LOW ( 1400 )
0001e7 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
0001e8 9701     +SBIW R24 , 1
0001e9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
                 ;    CE=0;
0001ea 98c0      	CBI  0x18,0
                 ;    CSN=1;
0001eb 9ac1      	SBI  0x18,1
                 ;}
0001ec 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void TX_Mode(){
                 _TX_Mode:
                 ; .FSTART _TX_Mode
                 ;    CE=0;
0001ed 98c0      	CBI  0x18,0
                 ;    RF_Write(CONFIG,0b00011110);
0001ee d8a2      	RCALL SUBOPT_0x9
0001ef e1ae      	LDI  R26,LOW(30)
                 _0x212000C:
0001f0 dfbb      	RCALL _RF_Write
                 ;}
0001f1 9508      	RET
                 ; .FEND
                 ;
                 ;void RX_Mode(){
                 ;    RF_Write(CONFIG,0b00011111);
                 ;    CE=1;
                 ;}
                 ;
                 ;void TX_Config(){
                 _TX_Config:
                 ; .FSTART _TX_Config
                 ;    RF_Write(STATUS,0b01111110);
0001f2 d8a4      	RCALL SUBOPT_0xB
                 ;    RF_Command(0b11100010);
0001f3 eea2      	LDI  R26,LOW(226)
0001f4 dfb4      	RCALL _RF_Command
                 ;    TX_Address(Send_Add);
0001f5 2da5      	MOV  R26,R5
0001f6 dfc2      	RCALL _TX_Address
                 ;}
0001f7 9508      	RET
                 ; .FEND
                 ;
                 ;void RX_Config(){
                 ;    RF_Write(STATUS,0b01111110);
                 ;    RF_Command(0b11100010);
                 ;    RX_Address(Receive_Add);
                 ;}
                 ; void clear(){
                 _clear:
                 ; .FSTART _clear
                 ;  CSN=0;//nghe lenh
0001f8 98c1      	CBI  0x18,1
                 ;    delay_us(10);
0001f9 d88f      	RCALL SUBOPT_0x7
                 ;	RF_Write(STATUS,0x70);
0001fa e7a0      	LDI  R26,LOW(112)
0001fb dfb0      	RCALL _RF_Write
                 ;    RF_Write(CONFIG,0b00011110);
0001fc d894      	RCALL SUBOPT_0x9
0001fd e1ae      	LDI  R26,LOW(30)
0001fe dfad      	RCALL _RF_Write
                 ;   // RF_Command(0b11100010);
                 ;	delay_us(10);
0001ff d89a      	RCALL SUBOPT_0xC
                 ;        RF_Write(CONFIG,0b00011110);
000200 d890      	RCALL SUBOPT_0x9
000201 e1ae      	LDI  R26,LOW(30)
000202 dfa9      	RCALL _RF_Write
                 ;
                 ;    CSN=1;
000203 9ac1      	SBI  0x18,1
                 ;    delay_ms(10);
000204 d899      	RCALL SUBOPT_0xD
000205 da08      	RCALL _delay_ms
                 ;    }
000206 9508      	RET
                 ; .FEND
                 ;
                 ;void TX_Send(int diem){
                 _TX_Send:
                 ; .FSTART _TX_Send
                 ;    TX_Address(Send_Add);
000207 d899      	RCALL SUBOPT_0xE
                 ;	diem -> Y+0
000208 2da5      	MOV  R26,R5
000209 dfaf      	RCALL _TX_Address
                 ;    CSN=1;
00020a d878      	RCALL SUBOPT_0x6
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    SPI_Write(0b11100001);
00020b eea1      	LDI  R26,LOW(225)
00020c d870      	RCALL SUBOPT_0x5
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
00020d 98c1      	CBI  0x18,1
                 ;    SPI_Write(0b10100000);
00020e eaa0      	LDI  R26,LOW(160)
00020f d86a      	RCALL SUBOPT_0x4
                 ;    SPI_Write(diem);
000210 df79      	RCALL _SPI_Write
                 ;    CSN=1;
000211 9ac1      	SBI  0x18,1
                 ;    CE=1;
000212 9ac0      	SBI  0x18,0
                 ;    delay_us(500);
                +
000213 ee88     +LDI R24 , LOW ( 1000 )
000214 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000215 9701     +SBIW R24 , 1
000216 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
                 ;    CE=0;
000217 98c0      	CBI  0x18,0
                 ;    RF_Write(0x07,0b01111110);
000218 d87e      	RCALL SUBOPT_0xB
                 ;    TX_Address(Send_Add);
000219 2da5      	MOV  R26,R5
00021a df9e      	RCALL _TX_Address
                 ;    RF_Command(0b11100001);
00021b eea1      	LDI  R26,LOW(225)
00021c df8c      	RCALL _RF_Command
                 ;}
00021d c7eb      	RJMP _0x2120003
                 ; .FEND
                 ;
                 ;void RX_Read(int score){
                 ;    CE=0;
                 ;	score -> Y+0
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    SPI_Write(0b01100001);
                 ;    delay_us(10);
                 ;    score = SPI_Read();
                 ;    CSN=1;
                 ;    CE=1;
                 ;    RF_Write(STATUS,0b01111110);
                 ;    RF_Command(0b11100010);
                 ;}
                 ;
                 ;void TX_Send_(int so_lan, int score){
                 ;    int i;
                 ;    for(i=0;i<so_lan;i++){
                 ;	so_lan -> Y+4
                 ;	score -> Y+2
                 ;	i -> R16,R17
                 ;        TX_Send(score);
                 ;    }
                 ;}
                 ;
                 ;#define R1  PINC.4
                 ;#define R2  PINC.5
                 ;#define R3  PINB.6
                 ;#define R4  PINB.2
                 ;#define R5  PIND.0
                 ;#define PR1 PORTC.4
                 ;#define PR2 PORTC.5
                 ;#define PR3 PORTB.6
                 ;#define PR4 PORTB.2
                 ;#define PR5 PORTD.0
                 ;
                 ;#define C1  PORTC.0
                 ;#define C2  PORTC.1
                 ;#define C3  PORTC.2
                 ;#define C4  PORTC.3
                 ;
                 ;#define PORT_COT PORTC
                 ;
                 ;unsigned char key_quet[4] = {0x37, 0x3B, 0x3D, 0x3E};
                 
                 	.DSEG
                 ;int i, j;
                 ;int ma[5][4] = {9, 0, 0, 10,
                 ;                5, 0, 0, 1,
                 ;                6, 0, 0, 2,
                 ;                7, 0, 0, 3,
                 ;                8, 0, 0, 4};
                 ;unsigned char buff[20];
                 ;int milisecond = 100, second = 180;
                 ;unsigned char blue = 0b0000, red = 0b0000;
                 ;bool is_start;
                 ;int blue_score, red_score;
                 ;int current_blue, current_red;
                 ;int pre_blue, pre_red;
                 ;
                 ;void reset(){
                 ; 0000 0033 void reset(){
                 
                 	.CSEG
                 _reset:
                 ; .FSTART _reset
                 ; 0000 0034     WDTCR=0x18;
00021e e1e8      	LDI  R30,LOW(24)
00021f bde1      	OUT  0x21,R30
                 ; 0000 0035     WDTCR=0x08;
000220 e0e8      	LDI  R30,LOW(8)
000221 bde1      	OUT  0x21,R30
                 ; 0000 0036     while(1);
                 _0x5D:
000222 cfff      	RJMP _0x5D
                 ; 0000 0037 }
                 ; .FEND
                 ;
                 ;void quet_ban_phim(){
                 ; 0000 0039 void quet_ban_phim(){
                 _quet_ban_phim:
                 ; .FSTART _quet_ban_phim
                 ; 0000 003A     for(i=0;i<4;i++){
000223 2488      	CLR  R8
000224 2499      	CLR  R9
                 _0x61:
000225 d87e      	RCALL SUBOPT_0xF
000226 f00c      	BRLT PC+2
000227 c0c4      	RJMP _0x62
                 ; 0000 003B         PORT_COT = key_quet[i];
000228 d880      	RCALL SUBOPT_0x10
                 ; 0000 003C         PR1 = 1;
                 ; 0000 003D         PR2 = 1;
                 ; 0000 003E         PR3 = 1;
                 ; 0000 003F         PR4 = 1;
                 ; 0000 0040         PR5 = 1;
                 ; 0000 0041         if(R1 == 0){
000229 999c      	SBIC 0x13,4
00022a c02e      	RJMP _0x6D
                 ; 0000 0042             if(i == 3){
00022b d889      	RCALL SUBOPT_0x11
00022c f511      	BRNE _0x6E
                 ; 0000 0043                 TX_Send(10);
00022d d870      	RCALL SUBOPT_0xD
00022e d88b      	RCALL SUBOPT_0x12
                 ; 0000 0044                 delay_ms(10);
00022f d9de      	RCALL _delay_ms
                 ; 0000 0045                 TX_Send(10);
000230 d86d      	RCALL SUBOPT_0xD
000231 d888      	RCALL SUBOPT_0x12
                 ; 0000 0046                 delay_ms(10);
000232 d9db      	RCALL _delay_ms
                 ; 0000 0047                 TX_Send(10);
000233 d86a      	RCALL SUBOPT_0xD
000234 d885      	RCALL SUBOPT_0x12
                 ; 0000 0048                 delay_ms(10);
000235 d886      	RCALL SUBOPT_0x13
                 ; 0000 0049                 clear();
                 ; 0000 004A                 is_start = true;
000236 e0e1      	LDI  R30,LOW(1)
000237 93e0 01b2 	STS  _is_start,R30
                 ; 0000 004B                 glcd_clear();
000239 d22e      	RCALL _glcd_clear
                 ; 0000 004C                 TIMSK = (1<<TOIE0);
00023a e0e1      	LDI  R30,LOW(1)
00023b bfe9      	OUT  0x39,R30
                 ; 0000 004D                 glcd_outtextxy(5, 0, "blue");
00023c e0e5      	LDI  R30,LOW(5)
00023d d880      	RCALL SUBOPT_0x14
                +
00023e e6a0     +LDI R26 , LOW ( _0x6F + ( 0 ) )
00023f e0b1     +LDI R27 , HIGH ( _0x6F + ( 0 ) )
                 	__POINTW2MN _0x6F,0
000240 d50a      	RCALL _glcd_outtextxy
                 ; 0000 004E                 glcd_outtextxy(60, 0, "red");
000241 e3ec      	LDI  R30,LOW(60)
000242 d87b      	RCALL SUBOPT_0x14
                +
000243 e6a5     +LDI R26 , LOW ( _0x6F + ( 5 ) )
000244 e0b1     +LDI R27 , HIGH ( _0x6F + ( 5 ) )
                 	__POINTW2MN _0x6F,5
000245 d505      	RCALL _glcd_outtextxy
                 ; 0000 004F                 glcd_line(42, 10, 42, 48);
000246 e2ea      	LDI  R30,LOW(42)
000247 93ea      	ST   -Y,R30
000248 e0ea      	LDI  R30,LOW(10)
000249 93ea      	ST   -Y,R30
00024a e2ea      	LDI  R30,LOW(42)
00024b 93ea      	ST   -Y,R30
00024c e3a0      	LDI  R26,LOW(48)
00024d d536      	RCALL _glcd_line
                 ; 0000 0050             }
                 ; 0000 0051             else if(i == 0){
00024e c009      	RJMP _0x70
                 _0x6E:
00024f d870      	RCALL SUBOPT_0x15
000250 f439      	BRNE _0x71
                 ; 0000 0052                 TX_Send(9);
000251 d871      	RCALL SUBOPT_0x16
                 ; 0000 0053                 delay_ms(10);
000252 d9bb      	RCALL _delay_ms
                 ; 0000 0054                 TX_Send(9);
000253 d86f      	RCALL SUBOPT_0x16
                 ; 0000 0055                 delay_ms(10);
000254 d9b9      	RCALL _delay_ms
                 ; 0000 0056                 TX_Send(9);
000255 d86d      	RCALL SUBOPT_0x16
                 ; 0000 0057                 delay_ms(10);
000256 d865      	RCALL SUBOPT_0x13
                 ; 0000 0058                 clear();
                 ; 0000 0059                 reset();
000257 dfc6      	RCALL _reset
                 ; 0000 005A             }
                 ; 0000 005B         }
                 _0x71:
                 _0x70:
                 ; 0000 005C         else if(R2 == 0 && is_start){
000258 c08f      	RJMP _0x72
                 _0x6D:
000259 999d      	SBIC 0x13,5
00025a c002      	RJMP _0x74
00025b d86a      	RCALL SUBOPT_0x17
00025c f409      	BRNE _0x75
                 _0x74:
00025d c01e      	RJMP _0x73
                 _0x75:
                 ; 0000 005D             if(i == 3){
00025e d856      	RCALL SUBOPT_0x11
00025f f469      	BRNE _0x76
                 ; 0000 005E                 TX_Send(1);
000260 d869      	RCALL SUBOPT_0x18
                 ; 0000 005F                 delay_ms(10);
000261 d9ac      	RCALL _delay_ms
                 ; 0000 0060                 TX_Send(1);
000262 d867      	RCALL SUBOPT_0x18
                 ; 0000 0061                 delay_ms(10);
000263 d9aa      	RCALL _delay_ms
                 ; 0000 0062                 TX_Send(1);
000264 d865      	RCALL SUBOPT_0x18
                 ; 0000 0063                 delay_ms(10);
000265 d856      	RCALL SUBOPT_0x13
                 ; 0000 0064                 clear();
                 ; 0000 0065                 blue_score = pre_blue + 2;
000266 d866      	RCALL SUBOPT_0x19
000267 9632      	ADIW R30,2
000268 d869      	RCALL SUBOPT_0x1A
                 ; 0000 0066                 current_blue = 2;
000269 e0e2      	LDI  R30,LOW(2)
00026a e0f0      	LDI  R31,HIGH(2)
00026b d86b      	RCALL SUBOPT_0x1B
                 ; 0000 0067             }
                 ; 0000 0068             else if(i == 0){
00026c c00e      	RJMP _0x77
                 _0x76:
00026d d852      	RCALL SUBOPT_0x15
00026e f461      	BRNE _0x78
                 ; 0000 0069                 TX_Send(5);
00026f d86c      	RCALL SUBOPT_0x1C
                 ; 0000 006A                 delay_ms(10);
000270 d99d      	RCALL _delay_ms
                 ; 0000 006B                 TX_Send(5);
000271 d86a      	RCALL SUBOPT_0x1C
                 ; 0000 006C                 delay_ms(10);
000272 d99b      	RCALL _delay_ms
                 ; 0000 006D                 TX_Send(5);
000273 d868      	RCALL SUBOPT_0x1C
                 ; 0000 006E                 delay_ms(10);
000274 d847      	RCALL SUBOPT_0x13
                 ; 0000 006F                 clear();
                 ; 0000 0070                 red_score = pre_red + 2;
000275 d869      	RCALL SUBOPT_0x1D
000276 9632      	ADIW R30,2
000277 d86c      	RCALL SUBOPT_0x1E
                 ; 0000 0071                 current_red = 2;
000278 e0e2      	LDI  R30,LOW(2)
000279 e0f0      	LDI  R31,HIGH(2)
00027a d86e      	RCALL SUBOPT_0x1F
                 ; 0000 0072             }
                 ; 0000 0073         }
                 _0x78:
                 _0x77:
                 ; 0000 0074         else if(R3 == 0 && is_start){
00027b c06c      	RJMP _0x79
                 _0x73:
00027c 99b6      	SBIC 0x16,6
00027d c002      	RJMP _0x7B
00027e d847      	RCALL SUBOPT_0x17
00027f f409      	BRNE _0x7C
                 _0x7B:
000280 c021      	RJMP _0x7A
                 _0x7C:
                 ; 0000 0075             if(i == 3){
000281 d833      	RCALL SUBOPT_0x11
000282 f481      	BRNE _0x7D
                 ; 0000 0076                 TX_Send(2);
000283 d810      	RCALL SUBOPT_0xA
000284 d835      	RCALL SUBOPT_0x12
                 ; 0000 0077                 delay_ms(10);
000285 d988      	RCALL _delay_ms
                 ; 0000 0078                 TX_Send(2);
000286 d80d      	RCALL SUBOPT_0xA
000287 d832      	RCALL SUBOPT_0x12
                 ; 0000 0079                 delay_ms(10);
000288 d985      	RCALL _delay_ms
                 ; 0000 007A                 TX_Send(2);
000289 d80a      	RCALL SUBOPT_0xA
00028a d82f      	RCALL SUBOPT_0x12
                 ; 0000 007B                 delay_ms(10);
00028b d830      	RCALL SUBOPT_0x13
                 ; 0000 007C                 clear();
                 ; 0000 007D                 blue_score = pre_blue + 3;
00028c d840      	RCALL SUBOPT_0x19
00028d 9633      	ADIW R30,3
00028e d843      	RCALL SUBOPT_0x1A
                 ; 0000 007E                 current_blue = 3;
00028f e0e3      	LDI  R30,LOW(3)
000290 e0f0      	LDI  R31,HIGH(3)
000291 d845      	RCALL SUBOPT_0x1B
                 ; 0000 007F             }
                 ; 0000 0080             else if(i == 0){
000292 c00e      	RJMP _0x7E
                 _0x7D:
000293 d82c      	RCALL SUBOPT_0x15
000294 f461      	BRNE _0x7F
                 ; 0000 0081                 TX_Send(6);
000295 d858      	RCALL SUBOPT_0x20
                 ; 0000 0082                 delay_ms(10);
000296 d977      	RCALL _delay_ms
                 ; 0000 0083                 TX_Send(6);
000297 d856      	RCALL SUBOPT_0x20
                 ; 0000 0084                 delay_ms(10);
000298 d975      	RCALL _delay_ms
                 ; 0000 0085                 TX_Send(6);
000299 d854      	RCALL SUBOPT_0x20
                 ; 0000 0086                 delay_ms(10);
00029a d821      	RCALL SUBOPT_0x13
                 ; 0000 0087                 clear();
                 ; 0000 0088                 red_score = pre_red + 3;
00029b d843      	RCALL SUBOPT_0x1D
00029c 9633      	ADIW R30,3
00029d d846      	RCALL SUBOPT_0x1E
                 ; 0000 0089                 current_red = 3;
00029e e0e3      	LDI  R30,LOW(3)
00029f e0f0      	LDI  R31,HIGH(3)
0002a0 d848      	RCALL SUBOPT_0x1F
                 ; 0000 008A             }
                 ; 0000 008B         }
                 _0x7F:
                 _0x7E:
                 ; 0000 008C         else if(R4 == 0 && is_start){
0002a1 c046      	RJMP _0x80
                 _0x7A:
0002a2 99b2      	SBIC 0x16,2
0002a3 c002      	RJMP _0x82
0002a4 d821      	RCALL SUBOPT_0x17
0002a5 f409      	BRNE _0x83
                 _0x82:
0002a6 c01f      	RJMP _0x81
                 _0x83:
                 ; 0000 008D             if(i == 3){
0002a7 d80d      	RCALL SUBOPT_0x11
0002a8 f469      	BRNE _0x84
                 ; 0000 008E                 TX_Send(3);
0002a9 d847      	RCALL SUBOPT_0x21
                 ; 0000 008F                 delay_ms(10);
0002aa d963      	RCALL _delay_ms
                 ; 0000 0090                 TX_Send(3);
0002ab d845      	RCALL SUBOPT_0x21
                 ; 0000 0091                 delay_ms(10);
0002ac d961      	RCALL _delay_ms
                 ; 0000 0092                 TX_Send(3);
0002ad d843      	RCALL SUBOPT_0x21
                 ; 0000 0093                 delay_ms(10);
0002ae d80d      	RCALL SUBOPT_0x13
                 ; 0000 0094                 clear();
                 ; 0000 0095                 blue_score = pre_blue + 5;
0002af d81d      	RCALL SUBOPT_0x19
0002b0 9635      	ADIW R30,5
0002b1 d820      	RCALL SUBOPT_0x1A
                 ; 0000 0096                 current_blue = 5;
0002b2 e0e5      	LDI  R30,LOW(5)
0002b3 e0f0      	LDI  R31,HIGH(5)
0002b4 d822      	RCALL SUBOPT_0x1B
                 ; 0000 0097             }
                 ; 0000 0098             else if(i == 0){
0002b5 c00f      	RJMP _0x85
                 _0x84:
0002b6 d809      	RCALL SUBOPT_0x15
0002b7 f469      	BRNE _0x86
                 ; 0000 0099                 TX_Send(7);
0002b8 d83b      	RCALL SUBOPT_0x22
                 ; 0000 009A                 delay_ms(10);
0002b9 d954      	RCALL _delay_ms
                 ; 0000 009B                 TX_Send(7);
0002ba d839      	RCALL SUBOPT_0x22
                 ; 0000 009C                 delay_ms(10);
0002bb d952      	RCALL _delay_ms
                 ; 0000 009D                 TX_Send(7);
0002bc d837      	RCALL SUBOPT_0x22
                 ; 0000 009E                 delay_ms(10);
0002bd d7fe      	RCALL SUBOPT_0x13
                 ; 0000 009F                 clear();
                 ; 0000 00A0                 red_score = pre_red + 5;
0002be d820      	RCALL SUBOPT_0x1D
0002bf 9635      	ADIW R30,5
0002c0 d823      	RCALL SUBOPT_0x1E
                 ; 0000 00A1                 current_red = 5;
0002c1 e0e5      	LDI  R30,LOW(5)
0002c2 e0f0      	LDI  R31,HIGH(5)
0002c3 d825      	RCALL SUBOPT_0x1F
                 ; 0000 00A2                 clear();
0002c4 df33      	RCALL _clear
                 ; 0000 00A3             }
                 ; 0000 00A4         }
                 _0x86:
                 _0x85:
                 ; 0000 00A5         else if(R5 == 0 && is_start){
0002c5 c022      	RJMP _0x87
                 _0x81:
0002c6 9980      	SBIC 0x10,0
0002c7 c002      	RJMP _0x89
0002c8 d7fd      	RCALL SUBOPT_0x17
0002c9 f409      	BRNE _0x8A
                 _0x89:
0002ca c01d      	RJMP _0x88
                 _0x8A:
                 ; 0000 00A6             if(i == 3){
0002cb d7e9      	RCALL SUBOPT_0x11
0002cc f469      	BRNE _0x8B
                 ; 0000 00A7                 TX_Send(4);
0002cd d829      	RCALL SUBOPT_0x23
                 ; 0000 00A8                 delay_ms(10);
0002ce d93f      	RCALL _delay_ms
                 ; 0000 00A9                 TX_Send(4);
0002cf d827      	RCALL SUBOPT_0x23
                 ; 0000 00AA                 delay_ms(10);
0002d0 d93d      	RCALL _delay_ms
                 ; 0000 00AB                 TX_Send(4);
0002d1 d825      	RCALL SUBOPT_0x23
                 ; 0000 00AC                 delay_ms(10);
0002d2 d7e9      	RCALL SUBOPT_0x13
                 ; 0000 00AD                 clear();
                 ; 0000 00AE                 blue_score = pre_blue + 10;
0002d3 d7f9      	RCALL SUBOPT_0x19
0002d4 963a      	ADIW R30,10
0002d5 d7fc      	RCALL SUBOPT_0x1A
                 ; 0000 00AF                 current_blue = 10;
0002d6 e0ea      	LDI  R30,LOW(10)
0002d7 e0f0      	LDI  R31,HIGH(10)
0002d8 d7fe      	RCALL SUBOPT_0x1B
                 ; 0000 00B0             }
                 ; 0000 00B1             else if(i == 0){
0002d9 c00e      	RJMP _0x8C
                 _0x8B:
0002da d7e5      	RCALL SUBOPT_0x15
0002db f461      	BRNE _0x8D
                 ; 0000 00B2                 TX_Send(8);
0002dc d81d      	RCALL SUBOPT_0x24
                 ; 0000 00B3                 delay_ms(10);
0002dd d930      	RCALL _delay_ms
                 ; 0000 00B4                 TX_Send(8);
0002de d81b      	RCALL SUBOPT_0x24
                 ; 0000 00B5                 delay_ms(10);
0002df d92e      	RCALL _delay_ms
                 ; 0000 00B6                 TX_Send(8);
0002e0 d819      	RCALL SUBOPT_0x24
                 ; 0000 00B7                 delay_ms(10);
0002e1 d7da      	RCALL SUBOPT_0x13
                 ; 0000 00B8                 clear();
                 ; 0000 00B9                 red_score = pre_red + 10;
0002e2 d7fc      	RCALL SUBOPT_0x1D
0002e3 963a      	ADIW R30,10
0002e4 d7ff      	RCALL SUBOPT_0x1E
                 ; 0000 00BA                 current_red = 10;
0002e5 e0ea      	LDI  R30,LOW(10)
0002e6 e0f0      	LDI  R31,HIGH(10)
0002e7 d801      	RCALL SUBOPT_0x1F
                 ; 0000 00BB             }
                 ; 0000 00BC         }
                 _0x8D:
                 _0x8C:
                 ; 0000 00BD     }
                 _0x88:
                 _0x87:
                 _0x80:
                 _0x79:
                 _0x72:
0002e8 01f4      	MOVW R30,R8
0002e9 9631      	ADIW R30,1
0002ea 014f      	MOVW R8,R30
0002eb cf39      	RJMP _0x61
                 _0x62:
                 ; 0000 00BE }
0002ec 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x6F:
000160           	.BYTE 0x9
                 ;
                 ;bool no_button(){
                 ; 0000 00C0 _Bool no_button(){
                 
                 	.CSEG
                 _no_button:
                 ; .FSTART _no_button
                 ; 0000 00C1     for(i=0;i<4;i++){
0002ed 2488      	CLR  R8
0002ee 2499      	CLR  R9
                 _0x8F:
0002ef d7b4      	RCALL SUBOPT_0xF
0002f0 f48c      	BRGE _0x90
                 ; 0000 00C2         PORT_COT = key_quet[i];
0002f1 d7b7      	RCALL SUBOPT_0x10
                 ; 0000 00C3         PR1 = 1;
                 ; 0000 00C4         PR2 = 1;
                 ; 0000 00C5         PR3 = 1;
                 ; 0000 00C6         PR4 = 1;
                 ; 0000 00C7         PR5 = 1;
                 ; 0000 00C8         if(R1 == 0 || R2 == 0 || R3 == 0 || R4 == 0 || R5 == 0)
0002f2 9b9c      	SBIS 0x13,4
0002f3 c008      	RJMP _0x9C
0002f4 9b9d      	SBIS 0x13,5
0002f5 c006      	RJMP _0x9C
0002f6 9bb6      	SBIS 0x16,6
0002f7 c004      	RJMP _0x9C
0002f8 9bb2      	SBIS 0x16,2
0002f9 c002      	RJMP _0x9C
0002fa 9980      	SBIC 0x10,0
0002fb c002      	RJMP _0x9B
                 _0x9C:
                 ; 0000 00C9             return false;
0002fc e0e0      	LDI  R30,LOW(0)
0002fd 9508      	RET
                 ; 0000 00CA     }
                 _0x9B:
0002fe 01f4      	MOVW R30,R8
0002ff 9631      	ADIW R30,1
000300 014f      	MOVW R8,R30
000301 cfed      	RJMP _0x8F
                 _0x90:
                 ; 0000 00CB     return true;
000302 e0e1      	LDI  R30,LOW(1)
000303 9508      	RET
                 ; 0000 00CC }
                 ; .FEND
                 ;
                 ;interrupt [TIM0_OVF] void timer0_interrupt(){
                 ; 0000 00CE interrupt [10] void timer0_interrupt(){
                 _timer0_interrupt:
                 ; .FSTART _timer0_interrupt
000304 920a      	ST   -Y,R0
000305 921a      	ST   -Y,R1
000306 92fa      	ST   -Y,R15
000307 936a      	ST   -Y,R22
000308 937a      	ST   -Y,R23
000309 938a      	ST   -Y,R24
00030a 939a      	ST   -Y,R25
00030b 93aa      	ST   -Y,R26
00030c 93ba      	ST   -Y,R27
00030d 93ea      	ST   -Y,R30
00030e 93fa      	ST   -Y,R31
00030f b7ef      	IN   R30,SREG
000310 93ea      	ST   -Y,R30
                 ; 0000 00CF     TCNT0 = 0xB2;
000311 ebe2      	LDI  R30,LOW(178)
000312 bfe2      	OUT  0x32,R30
                 ; 0000 00D0     milisecond--;
000313 01f6      	MOVW R30,R12
000314 9731      	SBIW R30,1
000315 016f      	MOVW R12,R30
                 ; 0000 00D1     if(milisecond == 0){
000316 2c0c      	MOV  R0,R12
000317 280d      	OR   R0,R13
000318 f441      	BRNE _0x9E
                 ; 0000 00D2         second--;
000319 eba0      	LDI  R26,LOW(_second)
00031a e0b1      	LDI  R27,HIGH(_second)
00031b d7e1      	RCALL SUBOPT_0x25
00031c 9731      	SBIW R30,1
00031d d7e2      	RCALL SUBOPT_0x26
                 ; 0000 00D3         milisecond = 100;
00031e e6e4      	LDI  R30,LOW(100)
00031f e0f0      	LDI  R31,HIGH(100)
000320 016f      	MOVW R12,R30
                 ; 0000 00D4     }
                 ; 0000 00D5     if(second == 0)
                 _0x9E:
000321 d7e1      	RCALL SUBOPT_0x27
000322 9730      	SBIW R30,0
000323 f409      	BRNE _0x9F
                 ; 0000 00D6         reset();
000324 def9      	RCALL _reset
                 ; 0000 00D7 }
                 _0x9F:
000325 91e9      	LD   R30,Y+
000326 bfef      	OUT  SREG,R30
000327 91f9      	LD   R31,Y+
000328 91e9      	LD   R30,Y+
000329 91b9      	LD   R27,Y+
00032a 91a9      	LD   R26,Y+
00032b 9199      	LD   R25,Y+
00032c 9189      	LD   R24,Y+
00032d 9179      	LD   R23,Y+
00032e 9169      	LD   R22,Y+
00032f 90f9      	LD   R15,Y+
000330 9019      	LD   R1,Y+
000331 9009      	LD   R0,Y+
000332 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 00DA {
                 _main:
                 ; .FSTART _main
                 ; 0000 00DB GLCDINIT_t glcd_init_data;
                 ; 0000 00DC 
                 ; 0000 00DD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00DE DDRB=(0<<DDB7) | (0<<DDB6) | (1<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (1<<DDB1) | (1<<DDB0);
000333 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000334 e2eb      	LDI  R30,LOW(43)
000335 bbe7      	OUT  0x17,R30
                 ; 0000 00DF // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00E0 PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
000336 efef      	LDI  R30,LOW(255)
000337 bbe8      	OUT  0x18,R30
                 ; 0000 00E1 
                 ; 0000 00E2 // Port C initialization
                 ; 0000 00E3 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00E4 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000338 e0ef      	LDI  R30,LOW(15)
000339 bbe4      	OUT  0x14,R30
                 ; 0000 00E5 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00E6 PORTC=(0<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00033a e3e0      	LDI  R30,LOW(48)
00033b bbe5      	OUT  0x15,R30
                 ; 0000 00E7 
                 ; 0000 00E8 // Port D initialization
                 ; 0000 00E9 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00EA DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00033c e8e0      	LDI  R30,LOW(128)
00033d bbe1      	OUT  0x11,R30
                 ; 0000 00EB // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00EC PORTD=(1<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (1<<PORTD0);
00033e e8e1      	LDI  R30,LOW(129)
00033f bbe2      	OUT  0x12,R30
                 ; 0000 00ED 
                 ; 0000 00EE TCCR0=(1<<CS02) | (0<<CS01) | (1<<CS00);
000340 e0e5      	LDI  R30,LOW(5)
000341 bfe3      	OUT  0x33,R30
                 ; 0000 00EF TCNT0=0xB2;
000342 ebe2      	LDI  R30,LOW(178)
000343 bfe2      	OUT  0x32,R30
                 ; 0000 00F0 
                 ; 0000 00F1 TIMSK = (0<<TOIE0);
000344 e0e0      	LDI  R30,LOW(0)
000345 bfe9      	OUT  0x39,R30
                 ; 0000 00F2 
                 ; 0000 00F3 // Specify the current font for displaying text
                 ; 0000 00F4 glcd_init_data.font=font5x7;
000346 e2e6      	LDI  R30,LOW(_font5x7*2)
000347 e0f0      	LDI  R31,HIGH(_font5x7*2)
000348 83e8      	ST   Y,R30
000349 83f9      	STD  Y+1,R31
                 ; 0000 00F5 // No function is used for reading
                 ; 0000 00F6 // image data from external memory
                 ; 0000 00F7 glcd_init_data.readxmem=NULL;
00034a e0e0      	LDI  R30,LOW(0)
00034b 83ea      	STD  Y+2,R30
00034c 83eb      	STD  Y+2+1,R30
                 ; 0000 00F8 // No function is used for writing
                 ; 0000 00F9 // image data to external memory
                 ; 0000 00FA glcd_init_data.writexmem=NULL;
00034d 83ec      	STD  Y+4,R30
00034e 83ed      	STD  Y+4+1,R30
                 ; 0000 00FB // Set the LCD temperature coefficient
                 ; 0000 00FC glcd_init_data.temp_coef=PCD8544_DEFAULT_TEMP_COEF;
00034f 81ee      	LDD  R30,Y+6
000350 7fec      	ANDI R30,LOW(0xFC)
000351 83ee      	STD  Y+6,R30
                 ; 0000 00FD // Set the LCD bias
                 ; 0000 00FE glcd_init_data.bias=4;
000352 7ee3      	ANDI R30,LOW(0xE3)
000353 61e0      	ORI  R30,0x10
000354 83ee      	STD  Y+6,R30
                 ; 0000 00FF // Set the LCD contrast control voltage VLCD
                 ; 0000 0100 glcd_init_data.vlcd=PCD8544_DEFAULT_VLCD;
000355 81ef      	LDD  R30,Y+7
000356 78e0      	ANDI R30,LOW(0x80)
000357 63e2      	ORI  R30,LOW(0x32)
000358 83ef      	STD  Y+7,R30
                 ; 0000 0101 
                 ; 0000 0102 glcd_init(&glcd_init_data);
000359 01de      	MOVW R26,R28
00035a d09e      	RCALL _glcd_init
                 ; 0000 0103 
                 ; 0000 0104 #asm("sei")
00035b 9478      	sei
                 ; 0000 0105 #asm("wdr")
00035c 95a8      	wdr
                 ; 0000 0106 
                 ; 0000 0107 Common_Config();
00035d de66      	RCALL _Common_Config
                 ; 0000 0108 delay_us(10);
00035e d73b      	RCALL SUBOPT_0xC
                 ; 0000 0109 Common_Init();
00035f de85      	RCALL _Common_Init
                 ; 0000 010A delay_us(10);
000360 d739      	RCALL SUBOPT_0xC
                 ; 0000 010B TX_Config();
000361 de90      	RCALL _TX_Config
                 ; 0000 010C delay_us(10);
000362 d737      	RCALL SUBOPT_0xC
                 ; 0000 010D TX_Mode();
000363 de89      	RCALL _TX_Mode
                 ; 0000 010E 
                 ; 0000 010F glcd_outtextxy(16, 0, "cham diem");
000364 e1e0      	LDI  R30,LOW(16)
000365 d758      	RCALL SUBOPT_0x14
                +
000366 e6a9     +LDI R26 , LOW ( _0xA0 + ( 0 ) )
000367 e0b1     +LDI R27 , HIGH ( _0xA0 + ( 0 ) )
                 	__POINTW2MN _0xA0,0
000368 d3e2      	RCALL _glcd_outtextxy
                 ; 0000 0110 glcd_outtextxy(22, 10, "tu dong");
000369 e1e6      	LDI  R30,LOW(22)
00036a 93ea      	ST   -Y,R30
00036b e0ea      	LDI  R30,LOW(10)
00036c 93ea      	ST   -Y,R30
                +
00036d e7a3     +LDI R26 , LOW ( _0xA0 + ( 10 ) )
00036e e0b1     +LDI R27 , HIGH ( _0xA0 + ( 10 ) )
                 	__POINTW2MN _0xA0,10
00036f d3db      	RCALL _glcd_outtextxy
                 ; 0000 0111 is_start = false;
000370 e0e0      	LDI  R30,LOW(0)
000371 93e0 01b2 	STS  _is_start,R30
                 ; 0000 0112 
                 ; 0000 0113 while (1){
                 _0xA1:
                 ; 0000 0114     quet_ban_phim();
000373 deaf      	RCALL _quet_ban_phim
                 ; 0000 0115     clear();
000374 de83      	RCALL _clear
                 ; 0000 0116     if(no_button()){
000375 df77      	RCALL _no_button
000376 30e0      	CPI  R30,0
000377 f051      	BREQ _0xA4
                 ; 0000 0117         pre_blue = blue_score;
000378 d78f      	RCALL SUBOPT_0x28
000379 93e0 01bb 	STS  _pre_blue,R30
00037b 93f0 01bc 	STS  _pre_blue+1,R31
                 ; 0000 0118         pre_red = red_score;
00037d d78f      	RCALL SUBOPT_0x29
00037e 93e0 01bd 	STS  _pre_red,R30
000380 93f0 01be 	STS  _pre_red+1,R31
                 ; 0000 0119     }
                 ; 0000 011A     if(is_start){
                 _0xA4:
000382 d743      	RCALL SUBOPT_0x17
000383 f121      	BREQ _0xA5
                 ; 0000 011B         sprintf(buff, "%d ", second);
000384 d78d      	RCALL SUBOPT_0x2A
000385 d77d      	RCALL SUBOPT_0x27
000386 d794      	RCALL SUBOPT_0x2B
                 ; 0000 011C         glcd_outtextxy(36, 0, buff);
000387 e2e4      	LDI  R30,LOW(36)
000388 d735      	RCALL SUBOPT_0x14
000389 d797      	RCALL SUBOPT_0x2C
                 ; 0000 011D         sprintf(buff, "%d ", blue_score);
00038a d77d      	RCALL SUBOPT_0x28
00038b d78f      	RCALL SUBOPT_0x2B
                 ; 0000 011E         glcd_outtextxy(12, 40, buff);
00038c e0ec      	LDI  R30,LOW(12)
00038d d797      	RCALL SUBOPT_0x2D
                 ; 0000 011F         sprintf(buff, "%d ", red_score);
00038e d77e      	RCALL SUBOPT_0x29
00038f d78b      	RCALL SUBOPT_0x2B
                 ; 0000 0120         glcd_outtextxy(64, 40, buff);
000390 e4e0      	LDI  R30,LOW(64)
000391 d793      	RCALL SUBOPT_0x2D
                 ; 0000 0121         sprintf(buff, "%d ", current_blue);
000392 91e0 01b7 	LDS  R30,_current_blue
000394 91f0 01b8 	LDS  R31,_current_blue+1
000396 d784      	RCALL SUBOPT_0x2B
                 ; 0000 0122         glcd_outtextxy(12, 24, buff);
000397 e0ec      	LDI  R30,LOW(12)
000398 93ea      	ST   -Y,R30
000399 e1e8      	LDI  R30,LOW(24)
00039a 93ea      	ST   -Y,R30
00039b d785      	RCALL SUBOPT_0x2C
                 ; 0000 0123         sprintf(buff, "%d ", current_red);
00039c 91e0 01b9 	LDS  R30,_current_red
00039e 91f0 01ba 	LDS  R31,_current_red+1
0003a0 d77a      	RCALL SUBOPT_0x2B
                 ; 0000 0124         glcd_outtextxy(64, 24, buff);
0003a1 e4e0      	LDI  R30,LOW(64)
0003a2 93ea      	ST   -Y,R30
0003a3 e1e8      	LDI  R30,LOW(24)
0003a4 93ea      	ST   -Y,R30
0003a5 e9ac      	LDI  R26,LOW(_buff)
0003a6 e0b1      	LDI  R27,HIGH(_buff)
0003a7 d3a3      	RCALL _glcd_outtextxy
                 ; 0000 0125 
                 ; 0000 0126     }
                 ; 0000 0127 }
                 _0xA5:
0003a8 cfca      	RJMP _0xA1
                 ; 0000 0128 }
                 _0xA6:
0003a9 cfff      	RJMP _0xA6
                 ; .FEND
                 
                 	.DSEG
                 _0xA0:
000169           	.BYTE 0x12
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0003aa 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0003ab d6bd      	RCALL SUBOPT_0x0
0003ac 9892      	CBI  0x12,2
0003ad e018      	LDI  R17,LOW(8)
                 _0x2000004:
0003ae dffb      	RCALL _pcd8544_delay_G100
0003af 81e9      	LDD  R30,Y+1
0003b0 78e0      	ANDI R30,LOW(0x80)
0003b1 f011      	BREQ _0x2000006
0003b2 9a94      	SBI  0x12,4
0003b3 c001      	RJMP _0x2000007
                 _0x2000006:
0003b4 9894      	CBI  0x12,4
                 _0x2000007:
0003b5 81e9      	LDD  R30,Y+1
0003b6 0fee      	LSL  R30
0003b7 83e9      	STD  Y+1,R30
0003b8 dff1      	RCALL _pcd8544_delay_G100
0003b9 9a95      	SBI  0x12,5
0003ba dfef      	RCALL _pcd8544_delay_G100
0003bb 9895      	CBI  0x12,5
0003bc 5011      	SUBI R17,LOW(1)
0003bd f781      	BRNE _0x2000004
0003be 9a92      	SBI  0x12,2
0003bf 8118      	LDD  R17,Y+0
0003c0 c648      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0003c1 93aa      	ST   -Y,R26
0003c2 9893      	CBI  0x12,3
0003c3 81a8      	LD   R26,Y
0003c4 dfe6      	RCALL _pcd8544_wrbus_G100
0003c5 c0a0      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
0003c6 93aa      	ST   -Y,R26
0003c7 9a93      	SBI  0x12,3
0003c8 81a8      	LD   R26,Y
0003c9 dfe1      	RCALL _pcd8544_wrbus_G100
0003ca c09b      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
0003cb d69d      	RCALL SUBOPT_0x0
0003cc 81e9      	LDD  R30,Y+1
0003cd d75b      	RCALL SUBOPT_0x2E
0003ce 2f1e      	MOV  R17,R30
0003cf e5e4      	LDI  R30,LOW(84)
0003d0 9fe1      	MUL  R30,R17
0003d1 01f0      	MOVW R30,R0
0003d2 01df      	MOVW R26,R30
0003d3 81ea      	LDD  R30,Y+2
0003d4 d758      	RCALL SUBOPT_0x2F
0003d5 93e0 01bf 	STS  _gfx_addr_G100,R30
0003d7 93f0 01c0 	STS  _gfx_addr_G100+1,R31
0003d9 2fe1      	MOV  R30,R17
0003da 8118      	LDD  R17,Y+0
0003db c66e      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
0003dc 93aa      	ST   -Y,R26
0003dd 81e9      	LDD  R30,Y+1
0003de 68e0      	ORI  R30,0x80
0003df d751      	RCALL SUBOPT_0x30
0003e0 81e9      	LDD  R30,Y+1
0003e1 93ea      	ST   -Y,R30
0003e2 81a9      	LDD  R26,Y+1
0003e3 dfe7      	RCALL _pcd8544_setaddr_G100
0003e4 64e0      	ORI  R30,0x40
0003e5 d74b      	RCALL SUBOPT_0x30
0003e6 c622      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0003e7 93aa      	ST   -Y,R26
0003e8 81e9      	LDD  R30,Y+1
0003e9 93ea      	ST   -Y,R30
0003ea 81a9      	LDD  R26,Y+1
0003eb dff0      	RCALL _pcd8544_gotoxy
0003ec 91e0 01bf 	LDS  R30,_gfx_addr_G100
0003ee 91f0 01c0 	LDS  R31,_gfx_addr_G100+1
0003f0 d742      	RCALL SUBOPT_0x31
0003f1 81e0      	LD   R30,Z
0003f2 c616      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0003f3 93aa      	ST   -Y,R26
0003f4 d741      	RCALL SUBOPT_0x32
0003f5 81a8      	LD   R26,Y
0003f6 83a0      	STD  Z+0,R26
0003f7 dfce      	RCALL _pcd8544_wrdata_G100
0003f8 c06d      	RJMP _0x212000B
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0003f9 d6a7      	RCALL SUBOPT_0xE
0003fa d872      	RCALL __SAVELOCR4
0003fb 9a8a      	SBI  0x11,2
0003fc 9a92      	SBI  0x12,2
0003fd 9a8d      	SBI  0x11,5
0003fe 9895      	CBI  0x12,5
0003ff 9a8c      	SBI  0x11,4
000400 9a8b      	SBI  0x11,3
000401 9a89      	SBI  0x11,1
000402 9891      	CBI  0x12,1
000403 d69a      	RCALL SUBOPT_0xD
000404 d809      	RCALL _delay_ms
000405 9a91      	SBI  0x12,1
000406 d736      	RCALL SUBOPT_0x33
000407 9730      	SBIW R30,0
000408 f0d9      	BREQ _0x2000008
000409 d733      	RCALL SUBOPT_0x33
00040a 81e6      	LDD  R30,Z+6
00040b 70e3      	ANDI R30,LOW(0x3)
00040c 2f1e      	MOV  R17,R30
00040d d72f      	RCALL SUBOPT_0x33
00040e 81e6      	LDD  R30,Z+6
00040f 95e6      	LSR  R30
000410 95e6      	LSR  R30
000411 70e7      	ANDI R30,LOW(0x7)
000412 2f0e      	MOV  R16,R30
000413 d729      	RCALL SUBOPT_0x33
000414 81e7      	LDD  R30,Z+7
000415 77ef      	ANDI R30,0x7F
000416 2f3e      	MOV  R19,R30
000417 81ac      	LDD  R26,Y+4
000418 81bd      	LDD  R27,Y+4+1
000419 d823      	RCALL __GETW1P
00041a d725      	RCALL SUBOPT_0x34
00041b 81ac      	LDD  R26,Y+4
00041c 81bd      	LDD  R27,Y+4+1
00041d 9612      	ADIW R26,2
00041e d81e      	RCALL __GETW1P
00041f d725      	RCALL SUBOPT_0x35
000420 81ac      	LDD  R26,Y+4
000421 81bd      	LDD  R27,Y+4+1
000422 d727      	RCALL SUBOPT_0x36
000423 c008      	RJMP _0x20000A0
                 _0x2000008:
000424 e010      	LDI  R17,LOW(0)
000425 e003      	LDI  R16,LOW(3)
000426 e332      	LDI  R19,LOW(50)
000427 d725      	RCALL SUBOPT_0x37
000428 d717      	RCALL SUBOPT_0x34
000429 d723      	RCALL SUBOPT_0x37
00042a d71a      	RCALL SUBOPT_0x35
00042b d721      	RCALL SUBOPT_0x37
                 _0x20000A0:
                +
00042c 93e0 0196+STS _glcd_state + ( 27 ) , R30
00042e 93f0 0197+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000430 e2a1      	LDI  R26,LOW(33)
000431 df8f      	RCALL _pcd8544_wrcmd
000432 2fe1      	MOV  R30,R17
000433 60e4      	ORI  R30,4
000434 d6fc      	RCALL SUBOPT_0x30
000435 2fe0      	MOV  R30,R16
000436 61e0      	ORI  R30,0x10
000437 d6f9      	RCALL SUBOPT_0x30
000438 2fe3      	MOV  R30,R19
000439 68e0      	ORI  R30,0x80
00043a d6f6      	RCALL SUBOPT_0x30
00043b e2a0      	LDI  R26,LOW(32)
00043c df84      	RCALL _pcd8544_wrcmd
00043d e0a1      	LDI  R26,LOW(1)
00043e d01f      	RCALL _glcd_display
00043f e0e1      	LDI  R30,LOW(1)
000440 93e0 017b 	STS  _glcd_state,R30
000442 e0e0      	LDI  R30,LOW(0)
                +
000443 93e0 017c+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000445 e0e1      	LDI  R30,LOW(1)
                +
000446 93e0 0181+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000448 93e0 0182+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00044a 93e0 0183+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00044c efef      	LDI  R30,LOW(255)
                +
00044d 93e0 0184+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00044f e0e1      	LDI  R30,LOW(1)
                +
000450 93e0 018b+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000452 e8ec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000453 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000454 d6fb      	RCALL SUBOPT_0x38
000455 efef      	LDI  R30,LOW(255)
000456 93ea      	ST   -Y,R30
000457 e0a8      	LDI  R26,LOW(8)
000458 e0b0      	LDI  R27,0
000459 d581      	RCALL _memset
00045a d00d      	RCALL _glcd_clear
00045b e0e1      	LDI  R30,LOW(1)
00045c d817      	RCALL __LOADLOCR4
00045d c078      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00045e 93aa      	ST   -Y,R26
00045f 81e8      	LD   R30,Y
000460 30e0      	CPI  R30,0
000461 f011      	BREQ _0x200000A
000462 e0ec      	LDI  R30,LOW(12)
000463 c001      	RJMP _0x200000B
                 _0x200000A:
000464 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000465 d6cb      	RCALL SUBOPT_0x30
                 _0x212000B:
000466 9621      	ADIW R28,1
000467 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000468 d804      	RCALL __SAVELOCR4
000469 e030      	LDI  R19,0
                +
00046a 91e0 017c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00046c 30e0      	CPI  R30,0
00046d f009      	BREQ _0x200000D
00046e ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
00046f d621      	RCALL SUBOPT_0x9
000470 e0a0      	LDI  R26,LOW(0)
000471 df6a      	RCALL _pcd8544_gotoxy
                +
000472 ef08     +LDI R16 , LOW ( 504 )
000473 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000474 01f8      	MOVW R30,R16
                +
000475 5001     +SUBI R16 , LOW ( 1 )
000476 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000477 9730      	SBIW R30,0
000478 f019      	BREQ _0x2000010
000479 2fa3      	MOV  R26,R19
00047a df78      	RCALL _pcd8544_wrbyte
00047b cff8      	RJMP _0x200000E
                 _0x2000010:
00047c d614      	RCALL SUBOPT_0x9
00047d e0a0      	LDI  R26,LOW(0)
00047e d2f9      	RCALL _glcd_moveto
00047f d7f4      	RCALL __LOADLOCR4
000480 c5e6      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000481 93aa      	ST   -Y,R26
000482 d7ec      	RCALL __SAVELOCR2
000483 81ac      	LDD  R26,Y+4
000484 35a4      	CPI  R26,LOW(0x54)
000485 f418      	BRSH _0x2000012
000486 81ab      	LDD  R26,Y+3
000487 33a0      	CPI  R26,LOW(0x30)
000488 f010      	BRLO _0x2000011
                 _0x2000012:
000489 d7ec      	RCALL __LOADLOCR2
00048a c55d      	RJMP _0x2120004
                 _0x2000011:
00048b 81ec      	LDD  R30,Y+4
00048c 93ea      	ST   -Y,R30
00048d 81ac      	LDD  R26,Y+4
00048e df58      	RCALL _pcd8544_rdbyte
00048f 2f1e      	MOV  R17,R30
000490 81eb      	LDD  R30,Y+3
000491 70e7      	ANDI R30,LOW(0x7)
000492 e0a1      	LDI  R26,LOW(1)
000493 d78c      	RCALL __LSLB12
000494 2f0e      	MOV  R16,R30
000495 81ea      	LDD  R30,Y+2
000496 30e0      	CPI  R30,0
000497 f011      	BREQ _0x2000014
000498 2b10      	OR   R17,R16
000499 c003      	RJMP _0x2000015
                 _0x2000014:
00049a 2fe0      	MOV  R30,R16
00049b 95e0      	COM  R30
00049c 231e      	AND  R17,R30
                 _0x2000015:
00049d 2fa1      	MOV  R26,R17
00049e df54      	RCALL _pcd8544_wrbyte
00049f d7d6      	RCALL __LOADLOCR2
0004a0 c547      	RJMP _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
0004a1 d5c7      	RCALL SUBOPT_0x0
0004a2 81ed      	LDD  R30,Y+5
0004a3 93ea      	ST   -Y,R30
0004a4 81ad      	LDD  R26,Y+5
0004a5 df41      	RCALL _pcd8544_rdbyte
0004a6 2f1e      	MOV  R17,R30
0004a7 81e9      	LDD  R30,Y+1
0004a8 30e7      	CPI  R30,LOW(0x7)
0004a9 f011      	BREQ _0x2000020
0004aa 30e8      	CPI  R30,LOW(0x8)
0004ab f431      	BRNE _0x2000021
                 _0x2000020:
0004ac 81eb      	LDD  R30,Y+3
0004ad 93ea      	ST   -Y,R30
0004ae 81aa      	LDD  R26,Y+2
0004af d55b      	RCALL _glcd_mappixcolor1bit
0004b0 83eb      	STD  Y+3,R30
0004b1 c008      	RJMP _0x2000022
                 _0x2000021:
0004b2 30e3      	CPI  R30,LOW(0x3)
0004b3 f421      	BRNE _0x2000024
0004b4 81eb      	LDD  R30,Y+3
0004b5 95e0      	COM  R30
0004b6 83eb      	STD  Y+3,R30
0004b7 c002      	RJMP _0x2000025
                 _0x2000024:
0004b8 30e0      	CPI  R30,0
0004b9 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
0004ba 81ea      	LDD  R30,Y+2
0004bb 95e0      	COM  R30
0004bc 231e      	AND  R17,R30
0004bd c002      	RJMP _0x2000027
                 _0x2000026:
0004be 30e2      	CPI  R30,LOW(0x2)
0004bf f429      	BRNE _0x2000028
                 _0x2000027:
0004c0 81ea      	LDD  R30,Y+2
0004c1 81ab      	LDD  R26,Y+3
0004c2 23ea      	AND  R30,R26
0004c3 2b1e      	OR   R17,R30
0004c4 c00e      	RJMP _0x200001E
                 _0x2000028:
0004c5 30e1      	CPI  R30,LOW(0x1)
0004c6 f429      	BRNE _0x2000029
0004c7 81ea      	LDD  R30,Y+2
0004c8 81ab      	LDD  R26,Y+3
0004c9 23ea      	AND  R30,R26
0004ca 271e      	EOR  R17,R30
0004cb c007      	RJMP _0x200001E
                 _0x2000029:
0004cc 30e4      	CPI  R30,LOW(0x4)
0004cd f429      	BRNE _0x200001E
0004ce 81ea      	LDD  R30,Y+2
0004cf 95e0      	COM  R30
0004d0 81ab      	LDD  R26,Y+3
0004d1 2bea      	OR   R30,R26
0004d2 231e      	AND  R17,R30
                 _0x200001E:
0004d3 2fa1      	MOV  R26,R17
0004d4 df1e      	RCALL _pcd8544_wrbyte
0004d5 8118      	LDD  R17,Y+0
                 _0x212000A:
0004d6 9626      	ADIW R28,6
0004d7 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0004d8 93aa      	ST   -Y,R26
0004d9 9723      	SBIW R28,3
0004da d790      	RCALL __SAVELOCR6
0004db 89a8      	LDD  R26,Y+16
0004dc 35a4      	CPI  R26,LOW(0x54)
0004dd f448      	BRSH _0x200002C
0004de 85af      	LDD  R26,Y+15
0004df 33a0      	CPI  R26,LOW(0x30)
0004e0 f430      	BRSH _0x200002C
0004e1 85ae      	LDD  R26,Y+14
0004e2 30a0      	CPI  R26,LOW(0x0)
0004e3 f019      	BREQ _0x200002C
0004e4 85ad      	LDD  R26,Y+13
0004e5 30a0      	CPI  R26,LOW(0x0)
0004e6 f409      	BRNE _0x200002B
                 _0x200002C:
0004e7 c183      	RJMP _0x2120009
                 _0x200002B:
0004e8 85ee      	LDD  R30,Y+14
0004e9 87e8      	STD  Y+8,R30
0004ea 89a8      	LDD  R26,Y+16
0004eb 27bb      	CLR  R27
0004ec 85ee      	LDD  R30,Y+14
0004ed d665      	RCALL SUBOPT_0x39
0004ee 35a5      	CPI  R26,LOW(0x55)
0004ef e0e0      	LDI  R30,HIGH(0x55)
0004f0 07be      	CPC  R27,R30
0004f1 f020      	BRLO _0x200002E
0004f2 89a8      	LDD  R26,Y+16
0004f3 e5e4      	LDI  R30,LOW(84)
0004f4 1bea      	SUB  R30,R26
0004f5 87ee      	STD  Y+14,R30
                 _0x200002E:
0004f6 852d      	LDD  R18,Y+13
0004f7 85af      	LDD  R26,Y+15
0004f8 27bb      	CLR  R27
0004f9 85ed      	LDD  R30,Y+13
0004fa d658      	RCALL SUBOPT_0x39
0004fb 97d1      	SBIW R26,49
0004fc f020      	BRLO _0x200002F
0004fd 85af      	LDD  R26,Y+15
0004fe e3e0      	LDI  R30,LOW(48)
0004ff 1bea      	SUB  R30,R26
000500 87ed      	STD  Y+13,R30
                 _0x200002F:
000501 85a9      	LDD  R26,Y+9
000502 30a6      	CPI  R26,LOW(0x6)
000503 f009      	BREQ PC+2
000504 c051      	RJMP _0x2000030
000505 85ec      	LDD  R30,Y+12
000506 30e1      	CPI  R30,LOW(0x1)
000507 f409      	BRNE _0x2000034
000508 c162      	RJMP _0x2120009
                 _0x2000034:
000509 30e3      	CPI  R30,LOW(0x3)
00050a f439      	BRNE _0x2000037
                +
00050b 91e0 0196+LDS R30 , _glcd_state + ( 27 )
00050d 91f0 0197+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00050f 9730      	SBIW R30,0
000510 f409      	BRNE _0x2000036
000511 c159      	RJMP _0x2120009
                 _0x2000036:
                 _0x2000037:
000512 8508      	LDD  R16,Y+8
000513 85ed      	LDD  R30,Y+13
000514 d614      	RCALL SUBOPT_0x2E
000515 2f3e      	MOV  R19,R30
000516 2fe2      	MOV  R30,R18
000517 70e7      	ANDI R30,LOW(0x7)
000518 f419      	BRNE _0x2000039
000519 85ad      	LDD  R26,Y+13
00051a 172a      	CP   R18,R26
00051b f0d1      	BREQ _0x2000038
                 _0x2000039:
00051c 2fa0      	MOV  R26,R16
00051d 27bb      	CLR  R27
00051e 2fe3      	MOV  R30,R19
00051f d637      	RCALL SUBOPT_0x3A
000520 d639      	RCALL SUBOPT_0x3B
000521 0fea      	ADD  R30,R26
000522 1ffb      	ADC  R31,R27
000523 d639      	RCALL SUBOPT_0x3C
000524 9526      	LSR  R18
000525 9526      	LSR  R18
000526 9526      	LSR  R18
000527 2f53      	MOV  R21,R19
                 _0x200003B:
000528 935f      	PUSH R21
000529 5f5f      	SUBI R21,-1
00052a 2fe2      	MOV  R30,R18
00052b 91af      	POP  R26
00052c 17ea      	CP   R30,R26
00052d f040      	BRLO _0x200003D
00052e 2f10      	MOV  R17,R16
                 _0x200003E:
00052f 2fe1      	MOV  R30,R17
000530 5011      	SUBI R17,1
000531 30e0      	CPI  R30,0
000532 f011      	BREQ _0x2000040
000533 d62c      	RCALL SUBOPT_0x3D
000534 cffa      	RJMP _0x200003E
                 _0x2000040:
000535 cff2      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000536 85ae      	LDD  R26,Y+14
000537 170a      	CP   R16,R26
000538 f0e9      	BREQ _0x2000041
000539 85ee      	LDD  R30,Y+14
00053a d61f      	RCALL SUBOPT_0x3B
00053b d5f1      	RCALL SUBOPT_0x2F
00053c d620      	RCALL SUBOPT_0x3C
00053d 85ed      	LDD  R30,Y+13
00053e 70e7      	ANDI R30,LOW(0x7)
00053f f009      	BREQ _0x2000042
000540 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000541 e020      	LDI  R18,LOW(0)
                 _0x2000043:
000542 932f      	PUSH R18
000543 5f2f      	SUBI R18,-1
000544 2fe3      	MOV  R30,R19
000545 91af      	POP  R26
000546 17ae      	CP   R26,R30
000547 f470      	BRSH _0x2000045
000548 851e      	LDD  R17,Y+14
                 _0x2000046:
000549 931f      	PUSH R17
00054a 5f1f      	SUBI R17,-1
00054b 2fe0      	MOV  R30,R16
00054c 91af      	POP  R26
00054d 17ae      	CP   R26,R30
00054e f410      	BRSH _0x2000048
00054f d610      	RCALL SUBOPT_0x3D
000550 cff8      	RJMP _0x2000046
                 _0x2000048:
000551 85ee      	LDD  R30,Y+14
000552 d618      	RCALL SUBOPT_0x3E
000553 d5d9      	RCALL SUBOPT_0x2F
000554 d608      	RCALL SUBOPT_0x3C
000555 cfec      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
000556 85ef      	LDD  R30,Y+15
000557 70e7      	ANDI R30,LOW(0x7)
000558 2f3e      	MOV  R19,R30
                 _0x2000049:
000559 85ed      	LDD  R30,Y+13
00055a 30e0      	CPI  R30,0
00055b f409      	BRNE PC+2
00055c c10e      	RJMP _0x200004B
00055d 85ea      	LDD  R30,Y+10
00055e 85fb      	LDD  R31,Y+10+1
00055f d5fd      	RCALL SUBOPT_0x3C
000560 e010      	LDI  R17,LOW(0)
000561 8908      	LDD  R16,Y+16
000562 3030      	CPI  R19,0
000563 f009      	BREQ PC+2
000564 c059      	RJMP _0x200004C
000565 85ad      	LDD  R26,Y+13
000566 30a8      	CPI  R26,LOW(0x8)
000567 f408      	BRSH PC+2
000568 c050      	RJMP _0x200004D
000569 85e9      	LDD  R30,Y+9
00056a 30e0      	CPI  R30,0
00056b f011      	BREQ _0x2000052
00056c 30e3      	CPI  R30,LOW(0x3)
00056d f409      	BRNE _0x2000053
                 _0x2000052:
00056e c002      	RJMP _0x2000054
                 _0x2000053:
00056f 30e7      	CPI  R30,LOW(0x7)
000570 f409      	BRNE _0x2000055
                 _0x2000054:
000571 c002      	RJMP _0x2000056
                 _0x2000055:
000572 30e8      	CPI  R30,LOW(0x8)
000573 f409      	BRNE _0x2000057
                 _0x2000056:
000574 c002      	RJMP _0x2000058
                 _0x2000057:
000575 30e9      	CPI  R30,LOW(0x9)
000576 f409      	BRNE _0x2000059
                 _0x2000058:
000577 c002      	RJMP _0x200005A
                 _0x2000059:
000578 30ea      	CPI  R30,LOW(0xA)
000579 f419      	BRNE _0x200005B
                 _0x200005A:
00057a d5f3      	RCALL SUBOPT_0x3F
00057b de60      	RCALL _pcd8544_gotoxy
00057c c004      	RJMP _0x2000050
                 _0x200005B:
00057d 30e6      	CPI  R30,LOW(0x6)
00057e f411      	BRNE _0x2000050
00057f d5ee      	RCALL SUBOPT_0x3F
000580 de4a      	RCALL _pcd8544_setaddr_G100
                 _0x2000050:
                 _0x200005D:
000581 931f      	PUSH R17
000582 d5ee      	RCALL SUBOPT_0x40
000583 91af      	POP  R26
000584 17ae      	CP   R26,R30
000585 f560      	BRSH _0x200005F
000586 85a9      	LDD  R26,Y+9
000587 30a6      	CPI  R26,LOW(0x6)
000588 f431      	BRNE _0x2000060
000589 d5ea      	RCALL SUBOPT_0x41
00058a d5c5      	RCALL SUBOPT_0x38
00058b d5aa      	RCALL SUBOPT_0x32
00058c 81a0      	LD   R26,Z
00058d d4be      	RCALL _glcd_writemem
00058e c022      	RJMP _0x2000061
                 _0x2000060:
00058f 85e9      	LDD  R30,Y+9
000590 30e9      	CPI  R30,LOW(0x9)
000591 f411      	BRNE _0x2000065
000592 e050      	LDI  R21,LOW(0)
000593 c00c      	RJMP _0x2000066
                 _0x2000065:
000594 30ea      	CPI  R30,LOW(0xA)
000595 f411      	BRNE _0x2000064
000596 ef5f      	LDI  R21,LOW(255)
000597 c008      	RJMP _0x2000066
                 _0x2000064:
000598 d5db      	RCALL SUBOPT_0x41
000599 d5e3      	RCALL SUBOPT_0x42
00059a 2f5e      	MOV  R21,R30
00059b 85e9      	LDD  R30,Y+9
00059c 30e7      	CPI  R30,LOW(0x7)
00059d f011      	BREQ _0x200006D
00059e 30e8      	CPI  R30,LOW(0x8)
00059f f419      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
0005a0 d5e1      	RCALL SUBOPT_0x43
0005a1 2f5e      	MOV  R21,R30
0005a2 c006      	RJMP _0x200006F
                 _0x200006E:
0005a3 30e3      	CPI  R30,LOW(0x3)
0005a4 f411      	BRNE _0x2000071
0005a5 9550      	COM  R21
0005a6 c002      	RJMP _0x2000072
                 _0x2000071:
0005a7 30e0      	CPI  R30,0
0005a8 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
0005a9 2fa5      	MOV  R26,R21
0005aa de1b      	RCALL _pcd8544_wrdata_G100
0005ab c005      	RJMP _0x200006B
                 _0x2000074:
0005ac d5d8      	RCALL SUBOPT_0x44
0005ad efef      	LDI  R30,LOW(255)
0005ae 93ea      	ST   -Y,R30
0005af 85ad      	LDD  R26,Y+13
0005b0 def0      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
0005b1 cfcf      	RJMP _0x200005D
                 _0x200005F:
0005b2 85ef      	LDD  R30,Y+15
0005b3 5fe8      	SUBI R30,-LOW(8)
0005b4 87ef      	STD  Y+15,R30
0005b5 85ed      	LDD  R30,Y+13
0005b6 50e8      	SUBI R30,LOW(8)
0005b7 87ed      	STD  Y+13,R30
0005b8 c0ad      	RJMP _0x2000075
                 _0x200004D:
0005b9 855d      	LDD  R21,Y+13
0005ba e020      	LDI  R18,LOW(0)
0005bb e0e0      	LDI  R30,LOW(0)
0005bc 87ed      	STD  Y+13,R30
0005bd c067      	RJMP _0x2000076
                 _0x200004C:
0005be 2fe3      	MOV  R30,R19
0005bf 85ad      	LDD  R26,Y+13
0005c0 0fae      	ADD  R26,R30
0005c1 30a9      	CPI  R26,LOW(0x9)
0005c2 f420      	BRSH _0x2000077
0005c3 852d      	LDD  R18,Y+13
0005c4 e0e0      	LDI  R30,LOW(0)
0005c5 87ed      	STD  Y+13,R30
0005c6 c003      	RJMP _0x2000078
                 _0x2000077:
0005c7 e0e8      	LDI  R30,LOW(8)
0005c8 1be3      	SUB  R30,R19
0005c9 2f2e      	MOV  R18,R30
                 _0x2000078:
0005ca 933a      	ST   -Y,R19
0005cb 2fa2      	MOV  R26,R18
0005cc d434      	RCALL _glcd_getmask
0005cd 2f4e      	MOV  R20,R30
0005ce 85e9      	LDD  R30,Y+9
0005cf 30e6      	CPI  R30,LOW(0x6)
0005d0 f4b9      	BRNE _0x200007C
0005d1 d59c      	RCALL SUBOPT_0x3F
0005d2 ddf8      	RCALL _pcd8544_setaddr_G100
                 _0x200007D:
0005d3 931f      	PUSH R17
0005d4 d59c      	RCALL SUBOPT_0x40
0005d5 91af      	POP  R26
0005d6 17ae      	CP   R26,R30
0005d7 f478      	BRSH _0x200007F
0005d8 d55d      	RCALL SUBOPT_0x32
0005d9 81e0      	LD   R30,Z
0005da 23e4      	AND  R30,R20
0005db 2fae      	MOV  R26,R30
0005dc 2fe3      	MOV  R30,R19
0005dd d64a      	RCALL __LSRB12
0005de d5ac      	RCALL SUBOPT_0x45
0005df 2fe3      	MOV  R30,R19
0005e0 2fa4      	MOV  R26,R20
0005e1 d646      	RCALL __LSRB12
0005e2 d5b2      	RCALL SUBOPT_0x46
0005e3 d56c      	RCALL SUBOPT_0x38
0005e4 2fa5      	MOV  R26,R21
0005e5 d466      	RCALL _glcd_writemem
0005e6 cfec      	RJMP _0x200007D
                 _0x200007F:
0005e7 c022      	RJMP _0x200007B
                 _0x200007C:
0005e8 30e9      	CPI  R30,LOW(0x9)
0005e9 f411      	BRNE _0x2000080
0005ea e050      	LDI  R21,LOW(0)
0005eb c003      	RJMP _0x2000081
                 _0x2000080:
0005ec 30ea      	CPI  R30,LOW(0xA)
0005ed f489      	BRNE _0x2000087
0005ee ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0005ef d592      	RCALL SUBOPT_0x43
0005f0 2fae      	MOV  R26,R30
0005f1 2fe3      	MOV  R30,R19
0005f2 d62d      	RCALL __LSLB12
0005f3 2f5e      	MOV  R21,R30
                 _0x2000084:
0005f4 931f      	PUSH R17
0005f5 d57b      	RCALL SUBOPT_0x40
0005f6 91af      	POP  R26
0005f7 17ae      	CP   R26,R30
0005f8 f428      	BRSH _0x2000086
0005f9 d58b      	RCALL SUBOPT_0x44
0005fa 934a      	ST   -Y,R20
0005fb e0a0      	LDI  R26,LOW(0)
0005fc dea4      	RCALL _pcd8544_wrmasked_G100
0005fd cff6      	RJMP _0x2000084
                 _0x2000086:
0005fe c00b      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0005ff 931f      	PUSH R17
000600 d570      	RCALL SUBOPT_0x40
000601 91af      	POP  R26
000602 17ae      	CP   R26,R30
000603 f430      	BRSH _0x200008A
000604 d594      	RCALL SUBOPT_0x47
000605 2fae      	MOV  R26,R30
000606 2fe3      	MOV  R30,R19
000607 d618      	RCALL __LSLB12
000608 d59d      	RCALL SUBOPT_0x48
000609 cff5      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
00060a 85ed      	LDD  R30,Y+13
00060b 30e0      	CPI  R30,0
00060c f409      	BRNE _0x200008B
00060d c05d      	RJMP _0x200004B
                 _0x200008B:
00060e 85ad      	LDD  R26,Y+13
00060f 30a8      	CPI  R26,LOW(0x8)
000610 f428      	BRSH _0x200008C
000611 85ed      	LDD  R30,Y+13
000612 1be2      	SUB  R30,R18
000613 2f5e      	MOV  R21,R30
000614 e0e0      	LDI  R30,LOW(0)
000615 c003      	RJMP _0x20000A1
                 _0x200008C:
000616 2f53      	MOV  R21,R19
000617 85ed      	LDD  R30,Y+13
000618 50e8      	SUBI R30,LOW(8)
                 _0x20000A1:
000619 87ed      	STD  Y+13,R30
00061a e010      	LDI  R17,LOW(0)
00061b 85ef      	LDD  R30,Y+15
00061c 5fe8      	SUBI R30,-LOW(8)
00061d 87ef      	STD  Y+15,R30
00061e e0e8      	LDI  R30,LOW(8)
00061f 1be3      	SUB  R30,R19
000620 2f2e      	MOV  R18,R30
000621 8908      	LDD  R16,Y+16
000622 85ea      	LDD  R30,Y+10
000623 85fb      	LDD  R31,Y+10+1
000624 d538      	RCALL SUBOPT_0x3C
                 _0x2000076:
000625 2fe5      	MOV  R30,R21
000626 e0f0      	LDI  R31,0
000627 5fe6      	SUBI R30,LOW(-__glcd_mask*2)
000628 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000629 9144      	LPM  R20,Z
00062a 85e9      	LDD  R30,Y+9
00062b 30e6      	CPI  R30,LOW(0x6)
00062c f4b9      	BRNE _0x2000091
00062d d540      	RCALL SUBOPT_0x3F
00062e dd9c      	RCALL _pcd8544_setaddr_G100
                 _0x2000092:
00062f 931f      	PUSH R17
000630 d540      	RCALL SUBOPT_0x40
000631 91af      	POP  R26
000632 17ae      	CP   R26,R30
000633 f478      	BRSH _0x2000094
000634 d501      	RCALL SUBOPT_0x32
000635 81e0      	LD   R30,Z
000636 23e4      	AND  R30,R20
000637 2fae      	MOV  R26,R30
000638 2fe2      	MOV  R30,R18
000639 d5e6      	RCALL __LSLB12
00063a d550      	RCALL SUBOPT_0x45
00063b 2fe2      	MOV  R30,R18
00063c 2fa4      	MOV  R26,R20
00063d d5e2      	RCALL __LSLB12
00063e d556      	RCALL SUBOPT_0x46
00063f d510      	RCALL SUBOPT_0x38
000640 2fa5      	MOV  R26,R21
000641 d40a      	RCALL _glcd_writemem
000642 cfec      	RJMP _0x2000092
                 _0x2000094:
000643 c022      	RJMP _0x2000090
                 _0x2000091:
000644 30e9      	CPI  R30,LOW(0x9)
000645 f411      	BRNE _0x2000095
000646 e050      	LDI  R21,LOW(0)
000647 c003      	RJMP _0x2000096
                 _0x2000095:
000648 30ea      	CPI  R30,LOW(0xA)
000649 f489      	BRNE _0x200009C
00064a ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
00064b d536      	RCALL SUBOPT_0x43
00064c 2fae      	MOV  R26,R30
00064d 2fe2      	MOV  R30,R18
00064e d5d9      	RCALL __LSRB12
00064f 2f5e      	MOV  R21,R30
                 _0x2000099:
000650 931f      	PUSH R17
000651 d51f      	RCALL SUBOPT_0x40
000652 91af      	POP  R26
000653 17ae      	CP   R26,R30
000654 f428      	BRSH _0x200009B
000655 d52f      	RCALL SUBOPT_0x44
000656 934a      	ST   -Y,R20
000657 e0a0      	LDI  R26,LOW(0)
000658 de48      	RCALL _pcd8544_wrmasked_G100
000659 cff6      	RJMP _0x2000099
                 _0x200009B:
00065a c00b      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
00065b 931f      	PUSH R17
00065c d514      	RCALL SUBOPT_0x40
00065d 91af      	POP  R26
00065e 17ae      	CP   R26,R30
00065f f430      	BRSH _0x200009F
000660 d538      	RCALL SUBOPT_0x47
000661 2fae      	MOV  R26,R30
000662 2fe2      	MOV  R30,R18
000663 d5c4      	RCALL __LSRB12
000664 d541      	RCALL SUBOPT_0x48
000665 cff5      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000666 85e8      	LDD  R30,Y+8
000667 d4f2      	RCALL SUBOPT_0x3B
000668 d4c4      	RCALL SUBOPT_0x2F
000669 d540      	RCALL SUBOPT_0x49
00066a ceee      	RJMP _0x2000049
                 _0x200004B:
                 _0x2120009:
00066b d606      	RCALL __LOADLOCR6
00066c 9661      	ADIW R28,17
00066d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00066e d53e      	RCALL SUBOPT_0x4A
00066f f014      	BRLT _0x2020003
000670 d4dc      	RCALL SUBOPT_0x37
000671 c397      	RJMP _0x2120003
                 _0x2020003:
000672 d53f      	RCALL SUBOPT_0x4B
000673 35a4      	CPI  R26,LOW(0x54)
000674 e0e0      	LDI  R30,HIGH(0x54)
000675 07be      	CPC  R27,R30
000676 f01c      	BRLT _0x2020004
000677 e5e3      	LDI  R30,LOW(83)
000678 e0f0      	LDI  R31,HIGH(83)
000679 c38f      	RJMP _0x2120003
                 _0x2020004:
00067a 81e8      	LD   R30,Y
00067b 81f9      	LDD  R31,Y+1
00067c c38c      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00067d d52f      	RCALL SUBOPT_0x4A
00067e f014      	BRLT _0x2020005
00067f d4cd      	RCALL SUBOPT_0x37
000680 c388      	RJMP _0x2120003
                 _0x2020005:
000681 d530      	RCALL SUBOPT_0x4B
000682 97d0      	SBIW R26,48
000683 f01c      	BRLT _0x2020006
000684 e2ef      	LDI  R30,LOW(47)
000685 e0f0      	LDI  R31,HIGH(47)
000686 c382      	RJMP _0x2120003
                 _0x2020006:
000687 81e8      	LD   R30,Y
000688 81f9      	LDD  R31,Y+1
000689 c37f      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
00068a d416      	RCALL SUBOPT_0xE
00068b 9723      	SBIW R28,3
00068c d528      	RCALL SUBOPT_0x4C
00068d 018f      	MOVW R16,R30
00068e 2e00      	MOV  R0,R16
00068f 2a01      	OR   R0,R17
000690 f411      	BRNE _0x202000B
000691 d4bb      	RCALL SUBOPT_0x37
000692 c051      	RJMP _0x2120008
                 _0x202000B:
000693 d527      	RCALL SUBOPT_0x4D
000694 820f      	STD  Y+7,R0
000695 d525      	RCALL SUBOPT_0x4D
000696 820e      	STD  Y+6,R0
000697 d523      	RCALL SUBOPT_0x4D
000698 8608      	STD  Y+8,R0
000699 85eb      	LDD  R30,Y+11
00069a 85a8      	LDD  R26,Y+8
00069b 17ea      	CP   R30,R26
00069c f410      	BRSH _0x202000C
00069d d4af      	RCALL SUBOPT_0x37
00069e c045      	RJMP _0x2120008
                 _0x202000C:
00069f 01f8      	MOVW R30,R16
                +
0006a0 5f0f     +SUBI R16 , LOW ( - 1 )
0006a1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006a2 9154      	LPM  R21,Z
0006a3 85a8      	LDD  R26,Y+8
0006a4 27bb      	CLR  R27
0006a5 27ee      	CLR  R30
0006a6 0fa5      	ADD  R26,R21
0006a7 1fbe      	ADC  R27,R30
0006a8 85eb      	LDD  R30,Y+11
0006a9 e0f0      	LDI  R31,0
0006aa 17ea      	CP   R30,R26
0006ab 07fb      	CPC  R31,R27
0006ac f010      	BRLO _0x202000D
0006ad d49f      	RCALL SUBOPT_0x37
0006ae c035      	RJMP _0x2120008
                 _0x202000D:
0006af 81ee      	LDD  R30,Y+6
0006b0 d478      	RCALL SUBOPT_0x2E
0006b1 2f4e      	MOV  R20,R30
0006b2 81ee      	LDD  R30,Y+6
0006b3 70e7      	ANDI R30,LOW(0x7)
0006b4 f009      	BREQ _0x202000E
0006b5 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0006b6 81ef      	LDD  R30,Y+7
0006b7 30e0      	CPI  R30,0
0006b8 f081      	BREQ _0x202000F
0006b9 85a9      	LDD  R26,Y+9
0006ba 85ba      	LDD  R27,Y+9+1
0006bb 93ec      	ST   X,R30
0006bc 85a8      	LDD  R26,Y+8
0006bd 85eb      	LDD  R30,Y+11
0006be 1bea      	SUB  R30,R26
0006bf e0f0      	LDI  R31,0
0006c0 01df      	MOVW R26,R30
0006c1 81ef      	LDD  R30,Y+7
0006c2 d494      	RCALL SUBOPT_0x3A
0006c3 01df      	MOVW R26,R30
0006c4 2fe4      	MOV  R30,R20
0006c5 d491      	RCALL SUBOPT_0x3A
0006c6 0fe0      	ADD  R30,R16
0006c7 1ff1      	ADC  R31,R17
0006c8 c01b      	RJMP _0x2120008
                 _0x202000F:
0006c9 0198      	MOVW R18,R16
0006ca 2fe5      	MOV  R30,R21
0006cb e0f0      	LDI  R31,0
                +
0006cc 0f0e     +ADD R16 , R30
0006cd 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0006ce 85a8      	LDD  R26,Y+8
0006cf 5faf      	SUBI R26,-LOW(1)
0006d0 87a8      	STD  Y+8,R26
0006d1 50a1      	SUBI R26,LOW(1)
0006d2 85eb      	LDD  R30,Y+11
0006d3 17ae      	CP   R26,R30
0006d4 f450      	BRSH _0x2020012
0006d5 01f9      	MOVW R30,R18
                +
0006d6 5f2f     +SUBI R18 , LOW ( - 1 )
0006d7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006d8 91a4      	LPM  R26,Z
0006d9 e0b0      	LDI  R27,0
0006da 2fe4      	MOV  R30,R20
0006db d47b      	RCALL SUBOPT_0x3A
                +
0006dc 0f0e     +ADD R16 , R30
0006dd 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0006de cfef      	RJMP _0x2020010
                 _0x2020012:
0006df 01f9      	MOVW R30,R18
0006e0 91e4      	LPM  R30,Z
0006e1 d4de      	RCALL SUBOPT_0x4E
0006e2 93ec      	ST   X,R30
0006e3 01f8      	MOVW R30,R16
                 _0x2120008:
0006e4 d58d      	RCALL __LOADLOCR6
0006e5 962c      	ADIW R28,12
0006e6 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0006e7 e0e0      	LDI  R30,LOW(0)
                +
0006e8 93e0 017d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0006ea 91a0 017e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0006ec 27bb      	CLR  R27
0006ed d4d5      	RCALL SUBOPT_0x4F
0006ee d464      	RCALL SUBOPT_0x39
                +
0006ef 91e0 0182+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0006f1 d461      	RCALL SUBOPT_0x39
0006f2 df8a      	RCALL _glcd_clipy
                +
0006f3 93e0 017e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006f5 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0006f6 93aa      	ST   -Y,R26
0006f7 9721      	SBIW R28,1
0006f8 d4bc      	RCALL SUBOPT_0x4C
0006f9 9730      	SBIW R30,0
0006fa f409      	BRNE PC+2
0006fb c04a      	RJMP _0x202001F
0006fc 81af      	LDD  R26,Y+7
0006fd 30aa      	CPI  R26,LOW(0xA)
0006fe f409      	BRNE _0x2020020
0006ff c044      	RJMP _0x2020021
                 _0x2020020:
000700 81ef      	LDD  R30,Y+7
000701 93ea      	ST   -Y,R30
000702 01de      	MOVW R26,R28
000703 9617      	ADIW R26,7
000704 df85      	RCALL _glcd_getcharw_G101
000705 01af      	MOVW R20,R30
000706 9730      	SBIW R30,0
000707 f409      	BRNE _0x2020022
000708 c03f      	RJMP _0x2120007
                 _0x2020022:
                +
000709 91e0 0181+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00070b 81ae      	LDD  R26,Y+6
00070c 0fea      	ADD  R30,R26
00070d 2f3e      	MOV  R19,R30
                +
00070e 91a0 017d+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000710 27bb      	CLR  R27
000711 d41b      	RCALL SUBOPT_0x2F
000712 018f      	MOVW R16,R30
                +
000713 3505     +CPI R16 , LOW ( 85 )
000714 e0e0     +LDI R30 , HIGH ( 85 )
000715 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000716 f018      	BRLO _0x2020023
000717 2f03      	MOV  R16,R19
000718 2711      	CLR  R17
000719 dfcd      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
00071a 91e0 017d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00071c d4ad      	RCALL SUBOPT_0x50
00071d 85e8      	LDD  R30,Y+8
00071e 93ea      	ST   -Y,R30
00071f d4a3      	RCALL SUBOPT_0x4F
000720 93ea      	ST   -Y,R30
000721 e0e1      	LDI  R30,LOW(1)
000722 93ea      	ST   -Y,R30
000723 935a      	ST   -Y,R21
000724 934a      	ST   -Y,R20
000725 e0a7      	LDI  R26,LOW(7)
000726 ddb1      	RCALL _glcd_block
                +
000727 91e0 017d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000729 81ae      	LDD  R26,Y+6
00072a 0fea      	ADD  R30,R26
00072b d49e      	RCALL SUBOPT_0x50
                +
00072c 91e0 0181+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00072e 93ea      	ST   -Y,R30
00072f d493      	RCALL SUBOPT_0x4F
000730 d38d      	RCALL SUBOPT_0x14
000731 d49d      	RCALL SUBOPT_0x51
                +
000732 91e0 017d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000734 93ea      	ST   -Y,R30
                +
000735 91a0 017e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000737 d48b      	RCALL SUBOPT_0x4F
000738 0fea      	ADD  R30,R26
000739 93ea      	ST   -Y,R30
00073a 933a      	ST   -Y,R19
                +
00073b 91e0 0182+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00073d d380      	RCALL SUBOPT_0x14
00073e d490      	RCALL SUBOPT_0x51
00073f e5e4      	LDI  R30,LOW(84)
000740 e0f0      	LDI  R31,HIGH(84)
000741 17e0      	CP   R30,R16
000742 07f1      	CPC  R31,R17
000743 f411      	BRNE _0x2020024
                 _0x2020021:
000744 dfa2      	RCALL _glcd_new_line_G101
000745 c002      	RJMP _0x2120007
                 _0x2020024:
                 _0x202001F:
                +
000746 9300 017d+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000748 d529      	RCALL __LOADLOCR6
000749 9628      	ADIW R28,8
00074a 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00074b d355      	RCALL SUBOPT_0xE
00074c 931a      	ST   -Y,R17
00074d 81ec      	LDD  R30,Y+4
00074e 93ea      	ST   -Y,R30
00074f 81ac      	LDD  R26,Y+4
000750 d027      	RCALL _glcd_moveto
                 _0x2020025:
000751 81a9      	LDD  R26,Y+1
000752 81ba      	LDD  R27,Y+1+1
000753 91ed      	LD   R30,X+
000754 83a9      	STD  Y+1,R26
000755 83ba      	STD  Y+1+1,R27
000756 2f1e      	MOV  R17,R30
000757 30e0      	CPI  R30,0
000758 f019      	BREQ _0x2020027
000759 2fa1      	MOV  R26,R17
00075a df9b      	RCALL _glcd_putchar
00075b cff5      	RJMP _0x2020025
                 _0x2020027:
00075c 8118      	LDD  R17,Y+0
00075d c28a      	RJMP _0x2120004
                 ; .FEND
                 _glcd_putpixelm_G101:
                 ; .FSTART _glcd_putpixelm_G101
00075e 93aa      	ST   -Y,R26
00075f 81ea      	LDD  R30,Y+2
000760 93ea      	ST   -Y,R30
000761 81ea      	LDD  R30,Y+2
000762 93ea      	ST   -Y,R30
                +
000763 91e0 0184+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000765 81aa      	LDD  R26,Y+2
000766 23ea      	AND  R30,R26
000767 f019      	BREQ _0x202003E
000768 91e0 017b 	LDS  R30,_glcd_state
00076a c002      	RJMP _0x202003F
                 _0x202003E:
                +
00076b 91e0 017c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x202003F:
00076d 2fae      	MOV  R26,R30
00076e dd12      	RCALL _glcd_putpixel
00076f 81e8      	LD   R30,Y
000770 0fee      	LSL  R30
000771 83e8      	ST   Y,R30
000772 30e0      	CPI  R30,0
000773 f411      	BRNE _0x2020041
000774 e0e1      	LDI  R30,LOW(1)
000775 83e8      	ST   Y,R30
                 _0x2020041:
000776 81e8      	LD   R30,Y
000777 c2d2      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000778 93aa      	ST   -Y,R26
000779 81a9      	LDD  R26,Y+1
00077a 27bb      	CLR  R27
00077b def2      	RCALL _glcd_clipx
                +
00077c 93e0 017d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00077e 81a8      	LD   R26,Y
00077f 27bb      	CLR  R27
000780 defc      	RCALL _glcd_clipy
                +
000781 93e0 017e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000783 c285      	RJMP _0x2120003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000784 93aa      	ST   -Y,R26
000785 972b      	SBIW R28,11
000786 d4e4      	RCALL __SAVELOCR6
000787 89ac      	LDD  R26,Y+20
000788 27bb      	CLR  R27
000789 dee4      	RCALL _glcd_clipx
00078a 8bec      	STD  Y+20,R30
00078b 89aa      	LDD  R26,Y+18
00078c 27bb      	CLR  R27
00078d dee0      	RCALL _glcd_clipx
00078e 8bea      	STD  Y+18,R30
00078f 89ab      	LDD  R26,Y+19
000790 27bb      	CLR  R27
000791 deeb      	RCALL _glcd_clipy
000792 8beb      	STD  Y+19,R30
000793 89a9      	LDD  R26,Y+17
000794 27bb      	CLR  R27
000795 dee7      	RCALL _glcd_clipy
000796 8be9      	STD  Y+17,R30
000797 89ea      	LDD  R30,Y+18
                +
000798 93e0 017d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00079a 89e9      	LDD  R30,Y+17
                +
00079b 93e0 017e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00079d e0e1      	LDI  R30,LOW(1)
00079e 87e8      	STD  Y+8,R30
00079f 89e9      	LDD  R30,Y+17
0007a0 89ab      	LDD  R26,Y+19
0007a1 17ea      	CP   R30,R26
0007a2 f561      	BRNE _0x2020042
0007a3 891c      	LDD  R17,Y+20
0007a4 89aa      	LDD  R26,Y+18
0007a5 171a      	CP   R17,R26
0007a6 f431      	BRNE _0x2020043
0007a7 931a      	ST   -Y,R17
0007a8 89ec      	LDD  R30,Y+20
0007a9 93ea      	ST   -Y,R30
0007aa e0a1      	LDI  R26,LOW(1)
0007ab dfb2      	RCALL _glcd_putpixelm_G101
0007ac c0ba      	RJMP _0x2120006
                 _0x2020043:
0007ad 89aa      	LDD  R26,Y+18
0007ae 171a      	CP   R17,R26
0007af f430      	BRSH _0x2020044
0007b0 89ea      	LDD  R30,Y+18
0007b1 1be1      	SUB  R30,R17
0007b2 2f0e      	MOV  R16,R30
                +
0007b3 e041     +LDI R20 , LOW ( 1 )
0007b4 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
0007b5 c006      	RJMP _0x2020045
                 _0x2020044:
0007b6 89aa      	LDD  R26,Y+18
0007b7 2fe1      	MOV  R30,R17
0007b8 1bea      	SUB  R30,R26
0007b9 2f0e      	MOV  R16,R30
                +
0007ba ef4f     +LDI R20 , LOW ( - 1 )
0007bb ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2020045:
                 _0x2020047:
0007bc 893b      	LDD  R19,Y+19
0007bd e0e0      	LDI  R30,LOW(0)
0007be 83ee      	STD  Y+6,R30
                 _0x2020049:
0007bf d413      	RCALL SUBOPT_0x52
0007c0 f430      	BRSH _0x202004B
0007c1 d419      	RCALL SUBOPT_0x53
0007c2 9533      	INC  R19
0007c3 85aa      	LDD  R26,Y+10
0007c4 df99      	RCALL _glcd_putpixelm_G101
0007c5 83ef      	STD  Y+7,R30
0007c6 cff8      	RJMP _0x2020049
                 _0x202004B:
0007c7 81ef      	LDD  R30,Y+7
0007c8 87e8      	STD  Y+8,R30
0007c9 0f14      	ADD  R17,R20
0007ca 2fe0      	MOV  R30,R16
0007cb 5001      	SUBI R16,1
0007cc 30e0      	CPI  R30,0
0007cd f771      	BRNE _0x2020047
0007ce c098      	RJMP _0x202004C
                 _0x2020042:
0007cf 89ea      	LDD  R30,Y+18
0007d0 89ac      	LDD  R26,Y+20
0007d1 17ea      	CP   R30,R26
0007d2 f539      	BRNE _0x202004D
0007d3 893b      	LDD  R19,Y+19
0007d4 89a9      	LDD  R26,Y+17
0007d5 173a      	CP   R19,R26
0007d6 f430      	BRSH _0x202004E
0007d7 89e9      	LDD  R30,Y+17
0007d8 1be3      	SUB  R30,R19
0007d9 2f2e      	MOV  R18,R30
0007da e0e1      	LDI  R30,LOW(1)
0007db e0f0      	LDI  R31,HIGH(1)
0007dc c006      	RJMP _0x202011B
                 _0x202004E:
0007dd 89a9      	LDD  R26,Y+17
0007de 2fe3      	MOV  R30,R19
0007df 1bea      	SUB  R30,R26
0007e0 2f2e      	MOV  R18,R30
0007e1 efef      	LDI  R30,LOW(65535)
0007e2 efff      	LDI  R31,HIGH(65535)
                 _0x202011B:
0007e3 87ed      	STD  Y+13,R30
0007e4 87fe      	STD  Y+13+1,R31
                 _0x2020051:
0007e5 891c      	LDD  R17,Y+20
0007e6 e0e0      	LDI  R30,LOW(0)
0007e7 83ee      	STD  Y+6,R30
                 _0x2020053:
0007e8 d3ea      	RCALL SUBOPT_0x52
0007e9 f438      	BRSH _0x2020055
0007ea 931a      	ST   -Y,R17
0007eb 9513      	INC  R17
0007ec 933a      	ST   -Y,R19
0007ed 85aa      	LDD  R26,Y+10
0007ee df6f      	RCALL _glcd_putpixelm_G101
0007ef 83ef      	STD  Y+7,R30
0007f0 cff7      	RJMP _0x2020053
                 _0x2020055:
0007f1 81ef      	LDD  R30,Y+7
0007f2 87e8      	STD  Y+8,R30
0007f3 85ed      	LDD  R30,Y+13
0007f4 0f3e      	ADD  R19,R30
0007f5 2fe2      	MOV  R30,R18
0007f6 5021      	SUBI R18,1
0007f7 30e0      	CPI  R30,0
0007f8 f761      	BRNE _0x2020051
0007f9 c06d      	RJMP _0x2020056
                 _0x202004D:
0007fa e0e0      	LDI  R30,LOW(0)
0007fb 83ee      	STD  Y+6,R30
                 _0x2020057:
0007fc d3d6      	RCALL SUBOPT_0x52
0007fd f008      	BRLO PC+2
0007fe c068      	RJMP _0x2020059
0007ff 891c      	LDD  R17,Y+20
000800 893b      	LDD  R19,Y+19
000801 e0e1      	LDI  R30,LOW(1)
000802 2f2e      	MOV  R18,R30
000803 2f0e      	MOV  R16,R30
000804 89aa      	LDD  R26,Y+18
000805 27bb      	CLR  R27
000806 89ec      	LDD  R30,Y+20
000807 e0f0      	LDI  R31,0
000808 1bae      	SUB  R26,R30
000809 0bbf      	SBC  R27,R31
00080a 01ad      	MOVW R20,R26
00080b 2355      	TST  R21
00080c f422      	BRPL _0x202005A
00080d ef0f      	LDI  R16,LOW(255)
00080e 01fa      	MOVW R30,R20
00080f d40c      	RCALL __ANEGW1
000810 01af      	MOVW R20,R30
                 _0x202005A:
000811 01fa      	MOVW R30,R20
000812 0fee      	LSL  R30
000813 1fff      	ROL  R31
000814 87ef      	STD  Y+15,R30
000815 8bf8      	STD  Y+15+1,R31
000816 89a9      	LDD  R26,Y+17
000817 27bb      	CLR  R27
000818 89eb      	LDD  R30,Y+19
000819 e0f0      	LDI  R31,0
00081a 1bae      	SUB  R26,R30
00081b 0bbf      	SBC  R27,R31
00081c 87ad      	STD  Y+13,R26
00081d 87be      	STD  Y+13+1,R27
00081e 85ae      	LDD  R26,Y+14
00081f 23aa      	TST  R26
000820 f432      	BRPL _0x202005B
000821 ef2f      	LDI  R18,LOW(255)
000822 85ed      	LDD  R30,Y+13
000823 85fe      	LDD  R31,Y+13+1
000824 d3f7      	RCALL __ANEGW1
000825 87ed      	STD  Y+13,R30
000826 87fe      	STD  Y+13+1,R31
                 _0x202005B:
000827 85ed      	LDD  R30,Y+13
000828 85fe      	LDD  R31,Y+13+1
000829 0fee      	LSL  R30
00082a 1fff      	ROL  R31
00082b 87eb      	STD  Y+11,R30
00082c 87fc      	STD  Y+11+1,R31
00082d d3ad      	RCALL SUBOPT_0x53
00082e e0a1      	LDI  R26,LOW(1)
00082f df2e      	RCALL _glcd_putpixelm_G101
000830 87e8      	STD  Y+8,R30
000831 e0e0      	LDI  R30,LOW(0)
000832 87e9      	STD  Y+9,R30
000833 87ea      	STD  Y+9+1,R30
000834 d3a9      	RCALL SUBOPT_0x54
000835 174a      	CP   R20,R26
000836 075b      	CPC  R21,R27
000837 f0a4      	BRLT _0x202005C
                 _0x202005E:
000838 0f10      	ADD  R17,R16
000839 85eb      	LDD  R30,Y+11
00083a 85fc      	LDD  R31,Y+11+1
00083b d3a5      	RCALL SUBOPT_0x55
00083c d383      	RCALL SUBOPT_0x4E
00083d 174a      	CP   R20,R26
00083e 075b      	CPC  R21,R27
00083f f424      	BRGE _0x2020060
000840 0f32      	ADD  R19,R18
000841 85af      	LDD  R26,Y+15
000842 89b8      	LDD  R27,Y+15+1
000843 d3a3      	RCALL SUBOPT_0x56
                 _0x2020060:
000844 d396      	RCALL SUBOPT_0x53
000845 85aa      	LDD  R26,Y+10
000846 df17      	RCALL _glcd_putpixelm_G101
000847 87e8      	STD  Y+8,R30
000848 89ea      	LDD  R30,Y+18
000849 17e1      	CP   R30,R17
00084a f769      	BRNE _0x202005E
00084b c014      	RJMP _0x2020061
                 _0x202005C:
                 _0x2020063:
00084c 0f32      	ADD  R19,R18
00084d d3a0      	RCALL SUBOPT_0x57
00084e d392      	RCALL SUBOPT_0x55
00084f 85ed      	LDD  R30,Y+13
000850 85fe      	LDD  R31,Y+13+1
000851 d36e      	RCALL SUBOPT_0x4E
000852 17ea      	CP   R30,R26
000853 07fb      	CPC  R31,R27
000854 f424      	BRGE _0x2020065
000855 0f10      	ADD  R17,R16
000856 85ab      	LDD  R26,Y+11
000857 85bc      	LDD  R27,Y+11+1
000858 d38e      	RCALL SUBOPT_0x56
                 _0x2020065:
000859 d381      	RCALL SUBOPT_0x53
00085a 85aa      	LDD  R26,Y+10
00085b df02      	RCALL _glcd_putpixelm_G101
00085c 87e8      	STD  Y+8,R30
00085d 89e9      	LDD  R30,Y+17
00085e 17e3      	CP   R30,R19
00085f f761      	BRNE _0x2020063
                 _0x2020061:
000860 89eb      	LDD  R30,Y+19
000861 5fef      	SUBI R30,-LOW(1)
000862 8beb      	STD  Y+19,R30
000863 89e9      	LDD  R30,Y+17
000864 5fef      	SUBI R30,-LOW(1)
000865 8be9      	STD  Y+17,R30
000866 cf95      	RJMP _0x2020057
                 _0x2020059:
                 _0x2020056:
                 _0x202004C:
                 _0x2120006:
000867 d40a      	RCALL __LOADLOCR6
000868 9665      	ADIW R28,21
000869 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G103:
                 ; .FSTART _put_buff_G103
00086a d236      	RCALL SUBOPT_0xE
00086b d403      	RCALL __SAVELOCR2
00086c d384      	RCALL SUBOPT_0x58
00086d 9612      	ADIW R26,2
00086e d3ce      	RCALL __GETW1P
00086f 9730      	SBIW R30,0
000870 f111      	BREQ _0x2060010
000871 d37f      	RCALL SUBOPT_0x58
000872 d2d7      	RCALL SUBOPT_0x36
000873 018f      	MOVW R16,R30
000874 9730      	SBIW R30,0
000875 f061      	BREQ _0x2060012
                +
000876 3002     +CPI R16 , LOW ( 2 )
000877 e0e0     +LDI R30 , HIGH ( 2 )
000878 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000879 f080      	BRLO _0x2060013
00087a 01f8      	MOVW R30,R16
00087b 9731      	SBIW R30,1
00087c 018f      	MOVW R16,R30
                +
00087d 81aa     +LDD R26 , Y + 2
00087e 81bb     +LDD R27 , Y + 2 + 1
00087f 9614     +ADIW R26 , 4
000880 93ed     +ST X + , R30
000881 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2060012:
000882 d36e      	RCALL SUBOPT_0x58
000883 9612      	ADIW R26,2
000884 d278      	RCALL SUBOPT_0x25
000885 9631      	ADIW R30,1
000886 d279      	RCALL SUBOPT_0x26
000887 9731      	SBIW R30,1
000888 81ac      	LDD  R26,Y+4
000889 83a0      	STD  Z+0,R26
                 _0x2060013:
00088a d366      	RCALL SUBOPT_0x58
00088b d3b1      	RCALL __GETW1P
00088c 23ff      	TST  R31
00088d f022      	BRMI _0x2060014
00088e d362      	RCALL SUBOPT_0x58
00088f d26d      	RCALL SUBOPT_0x25
000890 9631      	ADIW R30,1
000891 d26e      	RCALL SUBOPT_0x26
                 _0x2060014:
000892 c005      	RJMP _0x2060015
                 _0x2060010:
000893 d35d      	RCALL SUBOPT_0x58
000894 efef      	LDI  R30,LOW(65535)
000895 efff      	LDI  R31,HIGH(65535)
000896 93ed      	ST   X+,R30
000897 93fc      	ST   X,R31
                 _0x2060015:
000898 d3dd      	RCALL __LOADLOCR2
000899 c14e      	RJMP _0x2120004
                 ; .FEND
                 __print_G103:
                 ; .FSTART __print_G103
00089a d206      	RCALL SUBOPT_0xE
00089b 9726      	SBIW R28,6
00089c d3ce      	RCALL __SAVELOCR6
00089d e010      	LDI  R17,0
00089e 85ac      	LDD  R26,Y+12
00089f 85bd      	LDD  R27,Y+12+1
0008a0 d2ac      	RCALL SUBOPT_0x37
0008a1 93ed      	ST   X+,R30
0008a2 93fc      	ST   X,R31
                 _0x2060016:
0008a3 89ea      	LDD  R30,Y+18
0008a4 89fb      	LDD  R31,Y+18+1
0008a5 9631      	ADIW R30,1
0008a6 8bea      	STD  Y+18,R30
0008a7 8bfb      	STD  Y+18+1,R31
0008a8 9731      	SBIW R30,1
0008a9 91e4      	LPM  R30,Z
0008aa 2f2e      	MOV  R18,R30
0008ab 30e0      	CPI  R30,0
0008ac f409      	BRNE PC+2
0008ad c0fe      	RJMP _0x2060018
0008ae 2fe1      	MOV  R30,R17
0008af 30e0      	CPI  R30,0
0008b0 f431      	BRNE _0x206001C
0008b1 3225      	CPI  R18,37
0008b2 f411      	BRNE _0x206001D
0008b3 e011      	LDI  R17,LOW(1)
0008b4 c001      	RJMP _0x206001E
                 _0x206001D:
0008b5 d33e      	RCALL SUBOPT_0x59
                 _0x206001E:
0008b6 c0f4      	RJMP _0x206001B
                 _0x206001C:
0008b7 30e1      	CPI  R30,LOW(0x1)
0008b8 f4a1      	BRNE _0x206001F
0008b9 3225      	CPI  R18,37
0008ba f411      	BRNE _0x2060020
0008bb d338      	RCALL SUBOPT_0x59
0008bc c0ed      	RJMP _0x20600CC
                 _0x2060020:
0008bd e012      	LDI  R17,LOW(2)
0008be e040      	LDI  R20,LOW(0)
0008bf e000      	LDI  R16,LOW(0)
0008c0 322d      	CPI  R18,45
0008c1 f411      	BRNE _0x2060021
0008c2 e001      	LDI  R16,LOW(1)
0008c3 c0e7      	RJMP _0x206001B
                 _0x2060021:
0008c4 322b      	CPI  R18,43
0008c5 f411      	BRNE _0x2060022
0008c6 e24b      	LDI  R20,LOW(43)
0008c7 c0e3      	RJMP _0x206001B
                 _0x2060022:
0008c8 3220      	CPI  R18,32
0008c9 f411      	BRNE _0x2060023
0008ca e240      	LDI  R20,LOW(32)
0008cb c0df      	RJMP _0x206001B
                 _0x2060023:
0008cc c002      	RJMP _0x2060024
                 _0x206001F:
0008cd 30e2      	CPI  R30,LOW(0x2)
0008ce f439      	BRNE _0x2060025
                 _0x2060024:
0008cf e050      	LDI  R21,LOW(0)
0008d0 e013      	LDI  R17,LOW(3)
0008d1 3320      	CPI  R18,48
0008d2 f411      	BRNE _0x2060026
0008d3 6800      	ORI  R16,LOW(128)
0008d4 c0d6      	RJMP _0x206001B
                 _0x2060026:
0008d5 c003      	RJMP _0x2060027
                 _0x2060025:
0008d6 30e3      	CPI  R30,LOW(0x3)
0008d7 f009      	BREQ PC+2
0008d8 c0d2      	RJMP _0x206001B
                 _0x2060027:
0008d9 3320      	CPI  R18,48
0008da f010      	BRLO _0x206002A
0008db 332a      	CPI  R18,58
0008dc f008      	BRLO _0x206002B
                 _0x206002A:
0008dd c007      	RJMP _0x2060029
                 _0x206002B:
0008de e0aa      	LDI  R26,LOW(10)
0008df 9f5a      	MUL  R21,R26
0008e0 2d50      	MOV  R21,R0
0008e1 2fe2      	MOV  R30,R18
0008e2 53e0      	SUBI R30,LOW(48)
0008e3 0f5e      	ADD  R21,R30
0008e4 c0c6      	RJMP _0x206001B
                 _0x2060029:
0008e5 2fe2      	MOV  R30,R18
0008e6 36e3      	CPI  R30,LOW(0x63)
0008e7 f439      	BRNE _0x206002F
0008e8 d310      	RCALL SUBOPT_0x5A
0008e9 d312      	RCALL SUBOPT_0x5B
0008ea d30e      	RCALL SUBOPT_0x5A
0008eb 81a4      	LDD  R26,Z+4
0008ec 93aa      	ST   -Y,R26
0008ed d312      	RCALL SUBOPT_0x5C
0008ee c0bb      	RJMP _0x2060030
                 _0x206002F:
0008ef 37e3      	CPI  R30,LOW(0x73)
0008f0 f439      	BRNE _0x2060032
0008f1 d312      	RCALL SUBOPT_0x5D
0008f2 d313      	RCALL SUBOPT_0x5E
0008f3 d269      	RCALL SUBOPT_0x3C
0008f4 d276      	RCALL SUBOPT_0x3E
0008f5 d0f4      	RCALL _strlen
0008f6 2f1e      	MOV  R17,R30
0008f7 c009      	RJMP _0x2060033
                 _0x2060032:
0008f8 37e0      	CPI  R30,LOW(0x70)
0008f9 f459      	BRNE _0x2060035
0008fa d309      	RCALL SUBOPT_0x5D
0008fb d30a      	RCALL SUBOPT_0x5E
0008fc d260      	RCALL SUBOPT_0x3C
0008fd d26d      	RCALL SUBOPT_0x3E
0008fe d0f6      	RCALL _strlenf
0008ff 2f1e      	MOV  R17,R30
000900 6008      	ORI  R16,LOW(8)
                 _0x2060033:
000901 6002      	ORI  R16,LOW(2)
000902 770f      	ANDI R16,LOW(127)
000903 e030      	LDI  R19,LOW(0)
000904 c02e      	RJMP _0x2060036
                 _0x2060035:
000905 36e4      	CPI  R30,LOW(0x64)
000906 f011      	BREQ _0x2060039
000907 36e9      	CPI  R30,LOW(0x69)
000908 f411      	BRNE _0x206003A
                 _0x2060039:
000909 6004      	ORI  R16,LOW(4)
00090a c002      	RJMP _0x206003B
                 _0x206003A:
00090b 37e5      	CPI  R30,LOW(0x75)
00090c f429      	BRNE _0x206003C
                 _0x206003B:
00090d e1e4      	LDI  R30,LOW(_tbl10_G103*2)
00090e e0f2      	LDI  R31,HIGH(_tbl10_G103*2)
00090f d24d      	RCALL SUBOPT_0x3C
000910 e015      	LDI  R17,LOW(5)
000911 c00b      	RJMP _0x206003D
                 _0x206003C:
000912 35e8      	CPI  R30,LOW(0x58)
000913 f411      	BRNE _0x206003F
000914 6008      	ORI  R16,LOW(8)
000915 c003      	RJMP _0x2060040
                 _0x206003F:
000916 37e8      	CPI  R30,LOW(0x78)
000917 f009      	BREQ PC+2
000918 c091      	RJMP _0x2060071
                 _0x2060040:
000919 e1ee      	LDI  R30,LOW(_tbl16_G103*2)
00091a e0f2      	LDI  R31,HIGH(_tbl16_G103*2)
00091b d241      	RCALL SUBOPT_0x3C
00091c e014      	LDI  R17,LOW(4)
                 _0x206003D:
00091d ff02      	SBRS R16,2
00091e c011      	RJMP _0x2060042
00091f d2e4      	RCALL SUBOPT_0x5D
000920 d2e5      	RCALL SUBOPT_0x5E
000921 d288      	RCALL SUBOPT_0x49
000922 85ab      	LDD  R26,Y+11
000923 23aa      	TST  R26
000924 f42a      	BRPL _0x2060043
000925 85ea      	LDD  R30,Y+10
000926 85fb      	LDD  R31,Y+10+1
000927 d2f4      	RCALL __ANEGW1
000928 d281      	RCALL SUBOPT_0x49
000929 e24d      	LDI  R20,LOW(45)
                 _0x2060043:
00092a 3040      	CPI  R20,0
00092b f011      	BREQ _0x2060044
00092c 5f1f      	SUBI R17,-LOW(1)
00092d c001      	RJMP _0x2060045
                 _0x2060044:
00092e 7f0b      	ANDI R16,LOW(251)
                 _0x2060045:
00092f c003      	RJMP _0x2060046
                 _0x2060042:
000930 d2d3      	RCALL SUBOPT_0x5D
000931 d2d4      	RCALL SUBOPT_0x5E
000932 d277      	RCALL SUBOPT_0x49
                 _0x2060046:
                 _0x2060036:
000933 fd00      	SBRC R16,0
000934 c010      	RJMP _0x2060047
                 _0x2060048:
000935 1715      	CP   R17,R21
000936 f470      	BRSH _0x206004A
000937 ff07      	SBRS R16,7
000938 c008      	RJMP _0x206004B
000939 ff02      	SBRS R16,2
00093a c004      	RJMP _0x206004C
00093b 7f0b      	ANDI R16,LOW(251)
00093c 2f24      	MOV  R18,R20
00093d 5011      	SUBI R17,LOW(1)
00093e c001      	RJMP _0x206004D
                 _0x206004C:
00093f e320      	LDI  R18,LOW(48)
                 _0x206004D:
000940 c001      	RJMP _0x206004E
                 _0x206004B:
000941 e220      	LDI  R18,LOW(32)
                 _0x206004E:
000942 d2b1      	RCALL SUBOPT_0x59
000943 5051      	SUBI R21,LOW(1)
000944 cff0      	RJMP _0x2060048
                 _0x206004A:
                 _0x2060047:
000945 2f31      	MOV  R19,R17
000946 ff01      	SBRS R16,1
000947 c014      	RJMP _0x206004F
                 _0x2060050:
000948 3030      	CPI  R19,0
000949 f089      	BREQ _0x2060052
00094a ff03      	SBRS R16,3
00094b c005      	RJMP _0x2060053
00094c 81ee      	LDD  R30,Y+6
00094d 81ff      	LDD  R31,Y+6+1
00094e 9125      	LPM  R18,Z+
00094f d20d      	RCALL SUBOPT_0x3C
000950 c004      	RJMP _0x2060054
                 _0x2060053:
000951 d219      	RCALL SUBOPT_0x3E
000952 912d      	LD   R18,X+
000953 83ae      	STD  Y+6,R26
000954 83bf      	STD  Y+6+1,R27
                 _0x2060054:
000955 d29e      	RCALL SUBOPT_0x59
000956 3050      	CPI  R21,0
000957 f009      	BREQ _0x2060055
000958 5051      	SUBI R21,LOW(1)
                 _0x2060055:
000959 5031      	SUBI R19,LOW(1)
00095a cfed      	RJMP _0x2060050
                 _0x2060052:
00095b c045      	RJMP _0x2060056
                 _0x206004F:
                 _0x2060058:
00095c e320      	LDI  R18,LOW(48)
00095d 81ee      	LDD  R30,Y+6
00095e 81ff      	LDD  R31,Y+6+1
00095f d2e1      	RCALL __GETW1PF
000960 87e8      	STD  Y+8,R30
000961 87f9      	STD  Y+8+1,R31
000962 81ee      	LDD  R30,Y+6
000963 81ff      	LDD  R31,Y+6+1
000964 9632      	ADIW R30,2
000965 d1f7      	RCALL SUBOPT_0x3C
                 _0x206005A:
000966 85e8      	LDD  R30,Y+8
000967 85f9      	LDD  R31,Y+8+1
000968 d1f1      	RCALL SUBOPT_0x3B
000969 17ae      	CP   R26,R30
00096a 07bf      	CPC  R27,R31
00096b f048      	BRLO _0x206005C
00096c 5f2f      	SUBI R18,-LOW(1)
00096d 85a8      	LDD  R26,Y+8
00096e 85b9      	LDD  R27,Y+8+1
00096f 85ea      	LDD  R30,Y+10
000970 85fb      	LDD  R31,Y+10+1
000971 1bea      	SUB  R30,R26
000972 0bfb      	SBC  R31,R27
000973 d236      	RCALL SUBOPT_0x49
000974 cff1      	RJMP _0x206005A
                 _0x206005C:
000975 332a      	CPI  R18,58
000976 f028      	BRLO _0x206005D
000977 ff03      	SBRS R16,3
000978 c002      	RJMP _0x206005E
000979 5f29      	SUBI R18,-LOW(7)
00097a c001      	RJMP _0x206005F
                 _0x206005E:
00097b 5d29      	SUBI R18,-LOW(39)
                 _0x206005F:
                 _0x206005D:
00097c fd04      	SBRC R16,4
00097d c019      	RJMP _0x2060061
00097e 3321      	CPI  R18,49
00097f f420      	BRSH _0x2060063
000980 85a8      	LDD  R26,Y+8
000981 85b9      	LDD  R27,Y+8+1
000982 9711      	SBIW R26,1
000983 f409      	BRNE _0x2060062
                 _0x2060063:
000984 c009      	RJMP _0x20600CD
                 _0x2060062:
000985 1753      	CP   R21,R19
000986 f010      	BRLO _0x2060067
000987 ff00      	SBRS R16,0
000988 c001      	RJMP _0x2060068
                 _0x2060067:
000989 c011      	RJMP _0x2060066
                 _0x2060068:
00098a e220      	LDI  R18,LOW(32)
00098b ff07      	SBRS R16,7
00098c c00a      	RJMP _0x2060069
00098d e320      	LDI  R18,LOW(48)
                 _0x20600CD:
00098e 6100      	ORI  R16,LOW(16)
00098f ff02      	SBRS R16,2
000990 c006      	RJMP _0x206006A
000991 7f0b      	ANDI R16,LOW(251)
000992 934a      	ST   -Y,R20
000993 d26c      	RCALL SUBOPT_0x5C
000994 3050      	CPI  R21,0
000995 f009      	BREQ _0x206006B
000996 5051      	SUBI R21,LOW(1)
                 _0x206006B:
                 _0x206006A:
                 _0x2060069:
                 _0x2060061:
000997 d25c      	RCALL SUBOPT_0x59
000998 3050      	CPI  R21,0
000999 f009      	BREQ _0x206006C
00099a 5051      	SUBI R21,LOW(1)
                 _0x206006C:
                 _0x2060066:
00099b 5031      	SUBI R19,LOW(1)
00099c 85a8      	LDD  R26,Y+8
00099d 85b9      	LDD  R27,Y+8+1
00099e 9712      	SBIW R26,2
00099f f008      	BRLO _0x2060059
0009a0 cfbb      	RJMP _0x2060058
                 _0x2060059:
                 _0x2060056:
0009a1 ff00      	SBRS R16,0
0009a2 c007      	RJMP _0x206006D
                 _0x206006E:
0009a3 3050      	CPI  R21,0
0009a4 f029      	BREQ _0x2060070
0009a5 5051      	SUBI R21,LOW(1)
0009a6 e2e0      	LDI  R30,LOW(32)
0009a7 93ea      	ST   -Y,R30
0009a8 d257      	RCALL SUBOPT_0x5C
0009a9 cff9      	RJMP _0x206006E
                 _0x2060070:
                 _0x206006D:
                 _0x2060071:
                 _0x2060030:
                 _0x20600CC:
0009aa e010      	LDI  R17,LOW(0)
                 _0x206001B:
0009ab cef7      	RJMP _0x2060016
                 _0x2060018:
0009ac 85ac      	LDD  R26,Y+12
0009ad 85bd      	LDD  R27,Y+12+1
0009ae d28e      	RCALL __GETW1P
0009af d2c2      	RCALL __LOADLOCR6
0009b0 9664      	ADIW R28,20
0009b1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0009b2 92ff      	PUSH R15
0009b3 2ef8      	MOV  R15,R24
0009b4 9726      	SBIW R28,6
0009b5 d2b7      	RCALL __SAVELOCR4
0009b6 d252      	RCALL SUBOPT_0x5F
0009b7 9730      	SBIW R30,0
0009b8 f419      	BRNE _0x2060072
0009b9 efef      	LDI  R30,LOW(65535)
0009ba efff      	LDI  R31,HIGH(65535)
0009bb c01b      	RJMP _0x2120005
                 _0x2060072:
0009bc 01de      	MOVW R26,R28
0009bd 9616      	ADIW R26,6
0009be d259      	RCALL __ADDW2R15
0009bf 018d      	MOVW R16,R26
0009c0 d248      	RCALL SUBOPT_0x5F
0009c1 d19b      	RCALL SUBOPT_0x3C
0009c2 e0e0      	LDI  R30,LOW(0)
0009c3 87e8      	STD  Y+8,R30
0009c4 87e9      	STD  Y+8+1,R30
0009c5 01de      	MOVW R26,R28
0009c6 961a      	ADIW R26,10
0009c7 d250      	RCALL __ADDW2R15
0009c8 d274      	RCALL __GETW1P
0009c9 d186      	RCALL SUBOPT_0x38
0009ca 931a      	ST   -Y,R17
0009cb 930a      	ST   -Y,R16
0009cc e6ea      	LDI  R30,LOW(_put_buff_G103)
0009cd e0f8      	LDI  R31,HIGH(_put_buff_G103)
0009ce d181      	RCALL SUBOPT_0x38
0009cf 01de      	MOVW R26,R28
0009d0 961a      	ADIW R26,10
0009d1 dec8      	RCALL __print_G103
0009d2 019f      	MOVW R18,R30
0009d3 d197      	RCALL SUBOPT_0x3E
0009d4 e0e0      	LDI  R30,LOW(0)
0009d5 93ec      	ST   X,R30
0009d6 01f9      	MOVW R30,R18
                 _0x2120005:
0009d7 d29c      	RCALL __LOADLOCR4
0009d8 962a      	ADIW R28,10
0009d9 90ff      	POP  R15
0009da 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0009db d0c5      	RCALL SUBOPT_0xE
0009dc 81b9          ldd  r27,y+1
0009dd 81a8          ld   r26,y
0009de 9610          adiw r26,0
0009df f031          breq memset1
0009e0 81fc          ldd  r31,y+4
0009e1 81eb          ldd  r30,y+3
0009e2 816a          ldd  r22,y+2
                 memset0:
0009e3 9361          st   z+,r22
0009e4 9711          sbiw r26,1
0009e5 f7e9          brne memset0
                 memset1:
0009e6 81eb          ldd  r30,y+3
0009e7 81fc          ldd  r31,y+4
                 _0x2120004:
0009e8 9625      	ADIW R28,5
0009e9 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0009ea d0b6      	RCALL SUBOPT_0xE
0009eb 91a9          ld   r26,y+
0009ec 91b9          ld   r27,y+
0009ed 27ee          clr  r30
0009ee 27ff          clr  r31
                 strlen0:
0009ef 916d          ld   r22,x+
0009f0 2366          tst  r22
0009f1 f011          breq strlen1
0009f2 9631          adiw r30,1
0009f3 cffb          rjmp strlen0
                 strlen1:
0009f4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0009f5 d0ab      	RCALL SUBOPT_0xE
0009f6 27aa          clr  r26
0009f7 27bb          clr  r27
0009f8 91e9          ld   r30,y+
0009f9 91f9          ld   r31,y+
                 strlenf0:
0009fa 9005      	lpm  r0,z+
0009fb 2000          tst  r0
0009fc f011          breq strlenf1
0009fd 9611          adiw r26,1
0009fe cffb          rjmp strlenf0
                 strlenf1:
0009ff 01fd          movw r30,r26
000a00 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000a01 93aa      	ST   -Y,R26
000a02 81e8      	LD   R30,Y
000a03 e0f0      	LDI  R31,0
000a04 5fe6      	SUBI R30,LOW(-__glcd_mask*2)
000a05 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000a06 91a4      	LPM  R26,Z
000a07 81e9      	LDD  R30,Y+1
000a08 d217      	RCALL __LSLB12
                 _0x2120003:
000a09 9622      	ADIW R28,2
000a0a 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000a0b d05d      	RCALL SUBOPT_0x0
000a0c 81e9      	LDD  R30,Y+1
000a0d 30e7      	CPI  R30,LOW(0x7)
000a0e f011      	BREQ _0x20A0007
000a0f 30ea      	CPI  R30,LOW(0xA)
000a10 f419      	BRNE _0x20A0008
                 _0x20A0007:
000a11 9110 017b 	LDS  R17,_glcd_state
000a13 c009      	RJMP _0x20A0009
                 _0x20A0008:
000a14 30e9      	CPI  R30,LOW(0x9)
000a15 f419      	BRNE _0x20A000B
                +
000a16 9110 017c+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000a18 c004      	RJMP _0x20A0009
                 _0x20A000B:
000a19 30e8      	CPI  R30,LOW(0x8)
000a1a f4a1      	BRNE _0x20A0005
                +
000a1b 9110 018b+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20A0009:
                +
000a1d 91e0 017c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000a1f 30e0      	CPI  R30,0
000a20 f049      	BREQ _0x20A000E
000a21 3010      	CPI  R17,0
000a22 f019      	BREQ _0x20A000F
000a23 efef      	LDI  R30,LOW(255)
000a24 8118      	LDD  R17,Y+0
000a25 c024      	RJMP _0x2120002
                 _0x20A000F:
000a26 81ea      	LDD  R30,Y+2
000a27 95e0      	COM  R30
000a28 8118      	LDD  R17,Y+0
000a29 c020      	RJMP _0x2120002
                 _0x20A000E:
000a2a 3010      	CPI  R17,0
000a2b f419      	BRNE _0x20A0011
000a2c e0e0      	LDI  R30,LOW(0)
000a2d 8118      	LDD  R17,Y+0
000a2e c01b      	RJMP _0x2120002
                 _0x20A0011:
                 _0x20A0005:
000a2f 81ea      	LDD  R30,Y+2
000a30 8118      	LDD  R17,Y+0
000a31 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000a32 d06e      	RCALL SUBOPT_0xE
000a33 81ea      	LDD  R30,Y+2
000a34 30e1      	CPI  R30,LOW(0x1)
000a35 f421      	BRNE _0x20A0015
000a36 81e8      	LD   R30,Y
000a37 81f9      	LDD  R31,Y+1
000a38 91e4      	LPM  R30,Z
000a39 c010      	RJMP _0x2120002
                 _0x20A0015:
000a3a 30e2      	CPI  R30,LOW(0x2)
000a3b f419      	BRNE _0x20A0016
000a3c d175      	RCALL SUBOPT_0x4B
000a3d d20c      	RCALL __EEPROMRDB
000a3e c00b      	RJMP _0x2120002
                 _0x20A0016:
000a3f 30e3      	CPI  R30,LOW(0x3)
000a40 f439      	BRNE _0x20A0018
000a41 d170      	RCALL SUBOPT_0x4B
                +
000a42 91e0 0194+LDS R30 , _glcd_state + ( 25 )
000a44 91f0 0195+LDS R31 , _glcd_state + ( 25 ) + 1
000a46 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a47 c002      	RJMP _0x2120002
                 _0x20A0018:
000a48 d169      	RCALL SUBOPT_0x4B
000a49 91ec      	LD   R30,X
                 _0x2120002:
000a4a 9623      	ADIW R28,3
000a4b 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a4c 93aa      	ST   -Y,R26
000a4d 81eb      	LDD  R30,Y+3
000a4e 30e0      	CPI  R30,0
000a4f f429      	BRNE _0x20A001C
000a50 81e8      	LD   R30,Y
000a51 81a9      	LDD  R26,Y+1
000a52 81ba      	LDD  R27,Y+1+1
000a53 93ec      	ST   X,R30
000a54 c012      	RJMP _0x20A001B
                 _0x20A001C:
000a55 30e2      	CPI  R30,LOW(0x2)
000a56 f429      	BRNE _0x20A001D
000a57 81e8      	LD   R30,Y
000a58 81a9      	LDD  R26,Y+1
000a59 81ba      	LDD  R27,Y+1+1
000a5a d1fb      	RCALL __EEPROMWRB
000a5b c00b      	RJMP _0x20A001B
                 _0x20A001D:
000a5c 30e3      	CPI  R30,LOW(0x3)
000a5d f449      	BRNE _0x20A001B
000a5e 81e9      	LDD  R30,Y+1
000a5f 81fa      	LDD  R31,Y+1+1
000a60 d0ef      	RCALL SUBOPT_0x38
000a61 81aa      	LDD  R26,Y+2
                +
000a62 91e0 0196+LDS R30 , _glcd_state + ( 27 )
000a64 91f0 0197+LDS R31 , _glcd_state + ( 27 ) + 1
000a66 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20A001B:
                 _0x2120001:
000a67 9624      	ADIW R28,4
000a68 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00017b           	.BYTE 0x1D
                 _key_quet:
000198           	.BYTE 0x4
                 _buff:
00019c           	.BYTE 0x14
                 _second:
0001b0           	.BYTE 0x2
                 _is_start:
0001b2           	.BYTE 0x1
                 _blue_score:
0001b3           	.BYTE 0x2
                 _red_score:
0001b5           	.BYTE 0x2
                 _current_blue:
0001b7           	.BYTE 0x2
                 _current_red:
0001b9           	.BYTE 0x2
                 _pre_blue:
0001bb           	.BYTE 0x2
                 _pre_red:
0001bd           	.BYTE 0x2
                 _gfx_addr_G100:
0001bf           	.BYTE 0x2
                 _gfx_buffer_G100:
0001c1           	.BYTE 0x1F8
                 __seed_G108:
0003b9           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
000a69 93aa      	ST   -Y,R26
000a6a 931a      	ST   -Y,R17
000a6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000a6c 93aa      	ST   -Y,R26
000a6d 98c1      	CBI  0x18,1
000a6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000a6f 81a8      	LD   R26,Y
000a70 d719      	RCALL _SPI_Write
000a71 9ac1      	SBI  0x18,1
                +
000a72 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a73 958a     +DEC R24
000a74 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000a76 81e9      	LDD  R30,Y+1
000a77 62e0      	ORI  R30,0x20
000a78 2fae      	MOV  R26,R30
000a79 c710      	RJMP _SPI_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000a7a d70f      	RCALL _SPI_Write
000a7b 81a8      	LD   R26,Y
000a7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000a7d d70c      	RCALL _SPI_Write
000a7e 9ac1      	SBI  0x18,1
                +
000a7f e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a80 958a     +DEC R24
000a81 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000a83 9ac1      	SBI  0x18,1
                +
000a84 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a85 958a     +DEC R24
000a86 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a87 98c1      	CBI  0x18,1
000a88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
                +
000a89 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a8a 958a     +DEC R24
000a8b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a8c e0e7      	LDI  R30,LOW(7)
000a8d 93ea      	ST   -Y,R30
000a8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000a8f e7ae      	LDI  R26,LOW(126)
000a90 c71b      	RJMP _RF_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
000a91 e0e0      	LDI  R30,LOW(0)
000a92 93ea      	ST   -Y,R30
000a93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000a94 e0a2      	LDI  R26,LOW(2)
000a95 e0b0      	LDI  R27,0
000a96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
000a97 e0e7      	LDI  R30,LOW(7)
000a98 93ea      	ST   -Y,R30
000a99 cff5      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
                +
000a9a e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a9b 958a     +DEC R24
000a9c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0xD:
000a9e e0aa      	LDI  R26,LOW(10)
000a9f e0b0      	LDI  R27,0
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
000aa1 93ba      	ST   -Y,R27
000aa2 93aa      	ST   -Y,R26
000aa3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000aa4 e0e4      	LDI  R30,LOW(4)
000aa5 e0f0      	LDI  R31,HIGH(4)
000aa6 168e      	CP   R8,R30
000aa7 069f      	CPC  R9,R31
000aa8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x10:
000aa9 e9a8      	LDI  R26,LOW(_key_quet)
000aaa e0b1      	LDI  R27,HIGH(_key_quet)
000aab 0da8      	ADD  R26,R8
000aac 1db9      	ADC  R27,R9
000aad 91ec      	LD   R30,X
000aae bbe5      	OUT  0x15,R30
000aaf 9aac      	SBI  0x15,4
000ab0 9aad      	SBI  0x15,5
000ab1 9ac6      	SBI  0x18,6
000ab2 9ac2      	SBI  0x18,2
000ab3 9a90      	SBI  0x12,0
000ab4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x11:
000ab5 e0e3      	LDI  R30,LOW(3)
000ab6 e0f0      	LDI  R31,HIGH(3)
000ab7 15e8      	CP   R30,R8
000ab8 05f9      	CPC  R31,R9
000ab9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x12:
000aba d74c      	RCALL _TX_Send
000abb cfe2      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13:
000abc d151      	RCALL _delay_ms
000abd c73a      	RJMP _clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000abe 93ea      	ST   -Y,R30
000abf cfd1      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
000ac0 2c08      	MOV  R0,R8
000ac1 2809      	OR   R0,R9
000ac2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
000ac3 e0a9      	LDI  R26,LOW(9)
000ac4 e0b0      	LDI  R27,0
000ac5 cff4      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000ac6 91e0 01b2 	LDS  R30,_is_start
000ac8 30e0      	CPI  R30,0
000ac9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
000aca e0a1      	LDI  R26,LOW(1)
000acb e0b0      	LDI  R27,0
000acc cfed      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
000acd 91e0 01bb 	LDS  R30,_pre_blue
000acf 91f0 01bc 	LDS  R31,_pre_blue+1
000ad1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
000ad2 93e0 01b3 	STS  _blue_score,R30
000ad4 93f0 01b4 	STS  _blue_score+1,R31
000ad6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
000ad7 93e0 01b7 	STS  _current_blue,R30
000ad9 93f0 01b8 	STS  _current_blue+1,R31
000adb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
000adc e0a5      	LDI  R26,LOW(5)
000add e0b0      	LDI  R27,0
000ade cfdb      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D:
000adf 91e0 01bd 	LDS  R30,_pre_red
000ae1 91f0 01be 	LDS  R31,_pre_red+1
000ae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
000ae4 93e0 01b5 	STS  _red_score,R30
000ae6 93f0 01b6 	STS  _red_score+1,R31
000ae8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1F:
000ae9 93e0 01b9 	STS  _current_red,R30
000aeb 93f0 01ba 	STS  _current_red+1,R31
000aed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
000aee e0a6      	LDI  R26,LOW(6)
000aef e0b0      	LDI  R27,0
000af0 cfc9      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
000af1 e0a3      	LDI  R26,LOW(3)
000af2 e0b0      	LDI  R27,0
000af3 cfc6      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x22:
000af4 e0a7      	LDI  R26,LOW(7)
000af5 e0b0      	LDI  R27,0
000af6 cfc3      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
000af7 e0a4      	LDI  R26,LOW(4)
000af8 e0b0      	LDI  R27,0
000af9 cfc0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x24:
000afa e0a8      	LDI  R26,LOW(8)
000afb e0b0      	LDI  R27,0
000afc cfbd      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x25:
000afd 91ed      	LD   R30,X+
000afe 91fd      	LD   R31,X+
000aff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x26:
000b00 93fe      	ST   -X,R31
000b01 93ee      	ST   -X,R30
000b02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000b03 91e0 01b0 	LDS  R30,_second
000b05 91f0 01b1 	LDS  R31,_second+1
000b07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000b08 91e0 01b3 	LDS  R30,_blue_score
000b0a 91f0 01b4 	LDS  R31,_blue_score+1
000b0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000b0d 91e0 01b5 	LDS  R30,_red_score
000b0f 91f0 01b6 	LDS  R31,_red_score+1
000b11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x2A:
000b12 e9ec      	LDI  R30,LOW(_buff)
000b13 e0f1      	LDI  R31,HIGH(_buff)
000b14 93fa      	ST   -Y,R31
000b15 93ea      	ST   -Y,R30
                +
000b16 e7e9     +LDI R30 , LOW ( 2 * _0x0 + ( 27 ) )
000b17 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW1FN _0x0,27
000b18 93fa      	ST   -Y,R31
000b19 93ea      	ST   -Y,R30
000b1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2B:
000b1b d114      	RCALL __CWD1
000b1c d128      	RCALL __PUTPARD1
000b1d e084      	LDI  R24,4
000b1e de93      	RCALL _sprintf
000b1f 9628      	ADIW R28,8
000b20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
000b21 e9ac      	LDI  R26,LOW(_buff)
000b22 e0b1      	LDI  R27,HIGH(_buff)
000b23 dc27      	RCALL _glcd_outtextxy
000b24 cfed      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
000b25 93ea      	ST   -Y,R30
000b26 e2e8      	LDI  R30,LOW(40)
000b27 93ea      	ST   -Y,R30
000b28 cff8      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
000b29 95e6      	LSR  R30
000b2a 95e6      	LSR  R30
000b2b 95e6      	LSR  R30
000b2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2F:
000b2d e0f0      	LDI  R31,0
000b2e 0fea      	ADD  R30,R26
000b2f 1ffb      	ADC  R31,R27
000b30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
000b31 2fae      	MOV  R26,R30
000b32 c88e      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
000b33 53ef      	SUBI R30,LOW(-_gfx_buffer_G100)
000b34 4ffe      	SBCI R31,HIGH(-_gfx_buffer_G100)
000b35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x32:
000b36 ebaf      	LDI  R26,LOW(_gfx_addr_G100)
000b37 e0b1      	LDI  R27,HIGH(_gfx_addr_G100)
000b38 dfc4      	RCALL SUBOPT_0x25
000b39 9631      	ADIW R30,1
000b3a dfc5      	RCALL SUBOPT_0x26
000b3b 9731      	SBIW R30,1
000b3c cff6      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
000b3d 81ec      	LDD  R30,Y+4
000b3e 81fd      	LDD  R31,Y+4+1
000b3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
                +
000b40 93e0 017f+STS _glcd_state + ( 4 ) , R30
000b42 93f0 0180+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000b44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
                +
000b45 93e0 0194+STS _glcd_state + ( 25 ) , R30
000b47 93f0 0195+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000b49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
000b4a 9614      	ADIW R26,4
000b4b d0f1      	RCALL __GETW1P
000b4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x37:
000b4d e0e0      	LDI  R30,LOW(0)
000b4e e0f0      	LDI  R31,HIGH(0)
000b4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x38:
000b50 93fa      	ST   -Y,R31
000b51 93ea      	ST   -Y,R30
000b52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x39:
000b53 e0f0      	LDI  R31,0
000b54 0fae      	ADD  R26,R30
000b55 1fbf      	ADC  R27,R31
000b56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000b57 e0f0      	LDI  R31,0
000b58 d0dc      	RCALL __MULW12U
000b59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000b5a 85aa      	LDD  R26,Y+10
000b5b 85bb      	LDD  R27,Y+10+1
000b5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3C:
000b5d 83ee      	STD  Y+6,R30
000b5e 83ff      	STD  Y+6+1,R31
000b5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3D:
000b60 85ec      	LDD  R30,Y+12
000b61 93ea      	ST   -Y,R30
000b62 81ef      	LDD  R30,Y+7
000b63 85f8      	LDD  R31,Y+7+1
000b64 9631      	ADIW R30,1
000b65 83ef      	STD  Y+7,R30
000b66 87f8      	STD  Y+7+1,R31
000b67 9731      	SBIW R30,1
000b68 dfe7      	RCALL SUBOPT_0x38
000b69 e0a0      	LDI  R26,LOW(0)
000b6a cee1      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E:
000b6b 81ae      	LDD  R26,Y+6
000b6c 81bf      	LDD  R27,Y+6+1
000b6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
000b6e 930a      	ST   -Y,R16
000b6f 89a8      	LDD  R26,Y+16
000b70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x40:
000b71 5f1f      	SUBI R17,-1
000b72 85ee      	LDD  R30,Y+14
000b73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x41:
000b74 85ec      	LDD  R30,Y+12
000b75 93ea      	ST   -Y,R30
000b76 81ef      	LDD  R30,Y+7
000b77 85f8      	LDD  R31,Y+7+1
000b78 9631      	ADIW R30,1
000b79 83ef      	STD  Y+7,R30
000b7a 87f8      	STD  Y+7+1,R31
000b7b 9731      	SBIW R30,1
000b7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x42:
000b7d 2766      	CLR  R22
000b7e 2777      	CLR  R23
000b7f 01df      	MOVW R26,R30
000b80 01cb      	MOVW R24,R22
000b81 ceb0      	RJMP _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x43:
000b82 935a      	ST   -Y,R21
000b83 85aa      	LDD  R26,Y+10
000b84 ce86      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x44:
000b85 930a      	ST   -Y,R16
000b86 9503      	INC  R16
000b87 89e8      	LDD  R30,Y+16
000b88 93ea      	ST   -Y,R30
000b89 935a      	ST   -Y,R21
000b8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x45:
000b8b 2f5e      	MOV  R21,R30
000b8c 85ec      	LDD  R30,Y+12
000b8d 93ea      	ST   -Y,R30
000b8e 81af      	LDD  R26,Y+7
000b8f 85b8      	LDD  R27,Y+7+1
000b90 2788      	CLR  R24
000b91 2799      	CLR  R25
000b92 de9f      	RCALL _glcd_readmem
000b93 2e1e      	MOV  R1,R30
000b94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000b95 95e0      	COM  R30
000b96 21e1      	AND  R30,R1
000b97 2b5e      	OR   R21,R30
000b98 cfdb      	RJMP SUBOPT_0x41
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x47:
000b99 930a      	ST   -Y,R16
000b9a 9503      	INC  R16
000b9b 89e8      	LDD  R30,Y+16
000b9c 93ea      	ST   -Y,R30
000b9d 85ee      	LDD  R30,Y+14
000b9e 93ea      	ST   -Y,R30
000b9f 85e9      	LDD  R30,Y+9
000ba0 85fa      	LDD  R31,Y+9+1
000ba1 9631      	ADIW R30,1
000ba2 87e9      	STD  Y+9,R30
000ba3 87fa      	STD  Y+9+1,R31
000ba4 9731      	SBIW R30,1
000ba5 cfd7      	RJMP SUBOPT_0x42
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
000ba6 93ea      	ST   -Y,R30
000ba7 934a      	ST   -Y,R20
000ba8 85ad      	LDD  R26,Y+13
000ba9 c8f7      	RJMP _pcd8544_wrmasked_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x49:
000baa 87ea      	STD  Y+10,R30
000bab 87fb      	STD  Y+10+1,R31
000bac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
000bad def3      	RCALL SUBOPT_0xE
000bae 81a8      	LD   R26,Y
000baf 81b9      	LDD  R27,Y+1
000bb0 d0b6      	RCALL __CPW02
000bb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4B:
000bb2 81a8      	LD   R26,Y
000bb3 81b9      	LDD  R27,Y+1
000bb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4C:
000bb5 d0b5      	RCALL __SAVELOCR6
                +
000bb6 91e0 017f+LDS R30 , _glcd_state + ( 4 )
000bb8 91f0 0180+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000bba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4D:
000bbb 01f8      	MOVW R30,R16
                +
000bbc 5f0f     +SUBI R16 , LOW ( - 1 )
000bbd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bbe 9004      	LPM  R0,Z
000bbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4E:
000bc0 85a9      	LDD  R26,Y+9
000bc1 85ba      	LDD  R27,Y+9+1
000bc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4F:
                +
000bc3 91e0 017f+LDS R30 , _glcd_state + ( 4 )
000bc5 91f0 0180+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000bc7 9631      	ADIW R30,1
000bc8 91e4      	LPM  R30,Z
000bc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x50:
000bca 93ea      	ST   -Y,R30
                +
000bcb 91e0 017e+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000bcd 93ea      	ST   -Y,R30
000bce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
000bcf df7d      	RCALL SUBOPT_0x37
000bd0 df7f      	RCALL SUBOPT_0x38
000bd1 e0a9      	LDI  R26,LOW(9)
000bd2 c905      	RJMP _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x52:
000bd3 81ae      	LDD  R26,Y+6
000bd4 5faf      	SUBI R26,-LOW(1)
000bd5 83ae      	STD  Y+6,R26
000bd6 50a1      	SUBI R26,LOW(1)
                +
000bd7 91e0 0183+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000bd9 17ae      	CP   R26,R30
000bda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
000bdb 931a      	ST   -Y,R17
000bdc 933a      	ST   -Y,R19
000bdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x54:
000bde 85ad      	LDD  R26,Y+13
000bdf 85be      	LDD  R27,Y+13+1
000be0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x55:
000be1 dfde      	RCALL SUBOPT_0x4E
000be2 0fea      	ADD  R30,R26
000be3 1ffb      	ADC  R31,R27
000be4 87e9      	STD  Y+9,R30
000be5 87fa      	STD  Y+9+1,R31
000be6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x56:
000be7 85e9      	LDD  R30,Y+9
000be8 85fa      	LDD  R31,Y+9+1
000be9 1bea      	SUB  R30,R26
000bea 0bfb      	SBC  R31,R27
000beb 87e9      	STD  Y+9,R30
000bec 87fa      	STD  Y+9+1,R31
000bed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x57:
000bee 85ef      	LDD  R30,Y+15
000bef 89f8      	LDD  R31,Y+15+1
000bf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x58:
000bf1 81aa      	LDD  R26,Y+2
000bf2 81bb      	LDD  R27,Y+2+1
000bf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x59:
000bf4 932a      	ST   -Y,R18
000bf5 dfe8      	RCALL SUBOPT_0x54
000bf6 dff7      	RCALL SUBOPT_0x57
000bf7 9509      	ICALL
000bf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5A:
000bf9 89e8      	LDD  R30,Y+16
000bfa 89f9      	LDD  R31,Y+16+1
000bfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5B:
000bfc 9734      	SBIW R30,4
000bfd 8be8      	STD  Y+16,R30
000bfe 8bf9      	STD  Y+16+1,R31
000bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5C:
000c00 dfdd      	RCALL SUBOPT_0x54
000c01 dfec      	RCALL SUBOPT_0x57
000c02 9509      	ICALL
000c03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
000c04 dff4      	RCALL SUBOPT_0x5A
000c05 cff6      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5E:
000c06 89a8      	LDD  R26,Y+16
000c07 89b9      	LDD  R27,Y+16+1
000c08 cf41      	RJMP SUBOPT_0x36
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5F:
000c09 01de      	MOVW R26,R28
000c0a 961c      	ADIW R26,12
000c0b d00c      	RCALL __ADDW2R15
000c0c d030      	RCALL __GETW1P
000c0d 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000c0e 9610      	adiw r26,0
000c0f f039      	breq __delay_ms1
                 __delay_ms0:
                +
000c10 ed80     +LDI R24 , LOW ( 0x7D0 )
000c11 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000c12 9701     +SBIW R24 , 1
000c13 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000c14 95a8      	wdr
000c15 9711      	sbiw r26,1
000c16 f7c9      	brne __delay_ms0
                 __delay_ms1:
000c17 9508      	ret
                 
                 __ADDW2R15:
000c18 2400      	CLR  R0
000c19 0daf      	ADD  R26,R15
000c1a 1db0      	ADC  R27,R0
000c1b 9508      	RET
                 
                 __ANEGW1:
000c1c 95f1      	NEG  R31
000c1d 95e1      	NEG  R30
000c1e 40f0      	SBCI R31,0
000c1f 9508      	RET
                 
                 __LSLB12:
000c20 23ee      	TST  R30
000c21 2e0e      	MOV  R0,R30
000c22 2fea      	MOV  R30,R26
000c23 f019      	BREQ __LSLB12R
                 __LSLB12L:
000c24 0fee      	LSL  R30
000c25 940a      	DEC  R0
000c26 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000c27 9508      	RET
                 
                 __LSRB12:
000c28 23ee      	TST  R30
000c29 2e0e      	MOV  R0,R30
000c2a 2fea      	MOV  R30,R26
000c2b f019      	BREQ __LSRB12R
                 __LSRB12L:
000c2c 95e6      	LSR  R30
000c2d 940a      	DEC  R0
000c2e f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000c2f 9508      	RET
                 
                 __CWD1:
000c30 2f6f      	MOV  R22,R31
000c31 0f66      	ADD  R22,R22
000c32 0b66      	SBC  R22,R22
000c33 2f76      	MOV  R23,R22
000c34 9508      	RET
                 
                 __MULW12U:
000c35 9ffa      	MUL  R31,R26
000c36 2df0      	MOV  R31,R0
000c37 9feb      	MUL  R30,R27
000c38 0df0      	ADD  R31,R0
000c39 9fea      	MUL  R30,R26
000c3a 2de0      	MOV  R30,R0
000c3b 0df1      	ADD  R31,R1
000c3c 9508      	RET
                 
                 __GETW1P:
000c3d 91ed      	LD   R30,X+
000c3e 91fc      	LD   R31,X
000c3f 9711      	SBIW R26,1
000c40 9508      	RET
                 
                 __GETW1PF:
000c41 9005      	LPM  R0,Z+
000c42 91f4      	LPM  R31,Z
000c43 2de0      	MOV  R30,R0
000c44 9508      	RET
                 
                 __PUTPARD1:
000c45 937a      	ST   -Y,R23
000c46 936a      	ST   -Y,R22
000c47 93fa      	ST   -Y,R31
000c48 93ea      	ST   -Y,R30
000c49 9508      	RET
                 
                 __EEPROMRDB:
000c4a 99e1      	SBIC EECR,EEWE
000c4b cffe      	RJMP __EEPROMRDB
000c4c 93ff      	PUSH R31
000c4d b7ff      	IN   R31,SREG
000c4e 94f8      	CLI
000c4f bbae      	OUT  EEARL,R26
000c50 bbbf      	OUT  EEARH,R27
000c51 9ae0      	SBI  EECR,EERE
000c52 b3ed      	IN   R30,EEDR
000c53 bfff      	OUT  SREG,R31
000c54 91ff      	POP  R31
000c55 9508      	RET
                 
                 __EEPROMWRB:
000c56 9be1      	SBIS EECR,EEWE
000c57 c002      	RJMP __EEPROMWRB1
000c58 95a8      	WDR
000c59 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000c5a b79f      	IN   R25,SREG
000c5b 94f8      	CLI
000c5c bbae      	OUT  EEARL,R26
000c5d bbbf      	OUT  EEARH,R27
000c5e 9ae0      	SBI  EECR,EERE
000c5f b38d      	IN   R24,EEDR
000c60 17e8      	CP   R30,R24
000c61 f019      	BREQ __EEPROMWRB0
000c62 bbed      	OUT  EEDR,R30
000c63 9ae2      	SBI  EECR,EEMWE
000c64 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000c65 bf9f      	OUT  SREG,R25
000c66 9508      	RET
                 
                 __CPW02:
000c67 2400      	CLR  R0
000c68 160a      	CP   R0,R26
000c69 060b      	CPC  R0,R27
000c6a 9508      	RET
                 
                 __SAVELOCR6:
000c6b 935a      	ST   -Y,R21
                 __SAVELOCR5:
000c6c 934a      	ST   -Y,R20
                 __SAVELOCR4:
000c6d 933a      	ST   -Y,R19
                 __SAVELOCR3:
000c6e 932a      	ST   -Y,R18
                 __SAVELOCR2:
000c6f 931a      	ST   -Y,R17
000c70 930a      	ST   -Y,R16
000c71 9508      	RET
                 
                 __LOADLOCR6:
000c72 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000c73 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000c74 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000c75 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000c76 8119      	LDD  R17,Y+1
000c77 8108      	LD   R16,Y
000c78 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  34 r1 :   6 r2 :   0 r3 :   0 r4 :   0 r5 :   3 r6 :   0 r7 :   1 
r8 :  10 r9 :   6 r10:   0 r11:   0 r12:   4 r13:   1 r14:   0 r15:   6 
r16:  77 r17:  99 r18:  61 r19:  47 r20:  33 r21:  51 r22:  17 r23:   5 
r24:  35 r25:  10 r26: 330 r27:  92 r28:  27 r29:   1 r30: 791 r31: 152 
x  :  24 y  : 514 z  :  31 
Registers used: 28 out of 35 (80.0%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :  24 
adiw  :  46 and   :   9 andi  :  17 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  44 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   6 brmi  :   1 brne  : 107 brpl  :   3 brsh  :  24 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  17 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  32 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   7 cp    :  34 
cpc   :  13 cpi   : 101 cpse  :   0 dec   :  10 des   :   0 eor   :   1 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 in    :   5 
inc   :   4 ld    :  48 ldd   : 278 ldi   : 288 lds   :  47 lpm   :  30 
lsl   :   6 lsr   :   9 mov   : 106 movw  :  43 mul   :   5 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   8 ori   :  14 out   :  28 
pop   :  12 push  :  12 rcall : 526 ret   : 107 reti  :   1 rjmp  : 244 
rol   :   2 ror   :   0 sbc   :   5 sbci  :   8 sbi   :  31 sbic  :   8 
sbis  :   5 sbiw  :  39 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 139 std   :  84 
sts   :  36 sub   :  14 subi  :  41 swap  :   0 tst   :   8 wdr   :   3 

Instructions used: 62 out of 114 (54.4%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0018f2   5724    662   6386    8192  78.0%
[.dseg] 0x000060 0x0003bd      0    605    605    1024  59.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 16 warnings
