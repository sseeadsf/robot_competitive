;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <io.h>
;#include <delay.h>
;
;#define CE      PORTD.2
;#define SCK     PORTD.3
;#define MISO    PIND.4
;#define CSN     PORTD.7
;#define MOSI    PORTD.6
;#define IRQ     PIND.5
;#define Led PORTC.5
;char Send_Add = 0xB1, Receive_Add = 0xB1, Salt_Add = 0xAB;
;int score;
;#include "rf.c"
;#define CONFIG      	0x00
;#define EN_AA       	0x01
;#define EN_RXADDR   	0x02
;#define SETUP_AW    	0x03
;#define SETUP_RETR  	0x04
;#define RF_CH       	0x05
;#define RF_SETUP    	0x06
;#define STATUS  		0x07
;#define OBSERVE_TX  	0x08
;#define RPD          	0x09
;#define RX_ADDR_P0  	0x0A
;#define RX_ADDR_P1  	0x0B
;#define RX_ADDR_P2  	0x0C
;#define RX_ADDR_P3  	0x0D
;#define RX_ADDR_P4  	0x0E
;#define RX_ADDR_P5  	0x0F
;#define TX_ADDR     	0x10
;#define RX_PW_P0    	0x11
;#define RX_PW_P1    	0x12
;#define RX_PW_P2    	0x13
;#define RX_PW_P3    	0x14
;#define RX_PW_P4    	0x15
;#define RX_PW_P5    	0x16
;#define FIFO_STATUS 	0x17
;#define DYNPD	    	0x1C
;#define FEATURE	    	0x1D
;
;void SPI_Write(unsigned char Buff){
; 0000 000F void SPI_Write(unsigned char Buff){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    unsigned char bit_ctr;
;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	Buff -> Y+1
;	bit_ctr -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;        MOSI = (Buff & 0x80);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;        delay_us(5);
;PCODE: $00000024 VOL: 0
;        Buff = (Buff << 1);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;        SCK = 1;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;        delay_us(5);
;PCODE: $0000002A VOL: 0
;        Buff |= MISO;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;        SCK = 0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;    }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;}
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;
;unsigned char SPI_Read(void){
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;    unsigned char Buff=0;
;    unsigned char bit_ctr;
;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
;PCODE: $0000003E VOL: 0
;	Buff -> R17
;	bit_ctr -> R16
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;        delay_us(5);
;PCODE: $0000004A VOL: 0
;        Buff = (Buff << 1);
;PCODE: $0000004B VOL: 0
;        SCK = 1;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;        delay_us(5);
;PCODE: $0000004E VOL: 0
;        Buff |= MISO;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;        SCK = 0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;    }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;    return(Buff);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;}
;PCODE: $0000005D VOL: 0
;
;
;void RF_Command(unsigned char command){
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;    CSN=0;
;PCODE: $00000060 VOL: 0
;	command -> Y+0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;    SPI_Write(command);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;    CSN=1;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;    delay_us(10);
;PCODE: $00000067 VOL: 0
;}
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;
;
;void RF_Write(unsigned char Reg_Add, unsigned char Value){
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;    CSN=0;
;PCODE: $0000006D VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;    SPI_Write(0b00100000|Reg_Add);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;    CSN=1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;    delay_us(10);
;PCODE: $00000078 VOL: 0
;}
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;
;void RF_Write_Add(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
;{
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;    CSN=0;
;PCODE: $0000007E VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;    SPI_Write(0b00100000|Reg_Add);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;    SPI_Write(Salt_Add);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;    SPI_Write(Value);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;    SPI_Write(Value);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;    CSN=1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;    delay_us(10);
;PCODE: $00000091 VOL: 0
;}
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;
;void TX_Address(unsigned char Address){
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;    CSN=0;
;PCODE: $00000097 VOL: 0
;	Address -> Y+0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;    RF_Write(SETUP_AW,0b00000011);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;    CSN=1;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;    delay_us(10);
;PCODE: $000000A0 VOL: 0
;    CSN=0;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;    //RF_Write_Add(RX_ADDR_P0, Address);
;    RF_Write_Add(TX_ADDR, Address);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;}
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;
;void RX_Address(unsigned char Address){
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;    CSN=0;
;PCODE: $000000AC VOL: 0
;	Address -> Y+0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;    RF_Write(SETUP_AW,0b00000011);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;    CSN=1;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;    delay_us(10);
;PCODE: $000000B5 VOL: 0
;    CSN=0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;    RF_Write_Add(RX_ADDR_P0, Address);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;    //RF_Write_Add(RX_PW_P0, Address);
;}
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;
;
;void Common_Config(){
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;    CE=0;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;    CSN=1;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;    SCK=0;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;    delay_us(10);
;PCODE: $000000C7 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;    RF_Command(0b11100010);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;    RF_Write(CONFIG,0b00011111);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;    delay_ms(2);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;    RF_Write(FEATURE, 0b00000100);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;    RF_Write(RF_CH,0b00000010);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;    RF_Write(RF_SETUP, 0b00000110);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;    RF_Write(DYNPD,0b00000001);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;    RF_Write(EN_RXADDR,0b00000001);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;}
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;
;void Common_Init(){
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;    CE=1;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;    delay_us(700);
;PCODE: $000000F3 VOL: 0
;    CE=0;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;    CSN=1;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;}
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;
;
;void TX_Mode(){
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;    CE=0;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;    RF_Write(CONFIG,0b00011110);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;}
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;
;void RX_Mode(){
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;    RF_Write(CONFIG,0b00011111);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;    CE=1;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;}
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;
;void TX_Config(){
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;    RF_Command(0b11100010);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;    TX_Address(Send_Add);
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;}
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;
;void RX_Config(){
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;    RF_Command(0b11100010);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;    RX_Address(Receive_Add);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;}
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;
;void clear(){
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;    RF_Command(0b11100010);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;}
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;
;void TX_Send(){
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;    TX_Address(Send_Add);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;    CSN=1;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;    delay_us(10);
;PCODE: $00000136 VOL: 0
;    CSN=0;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;    SPI_Write(0b11100001);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;    CSN=1;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;    delay_us(10);
;PCODE: $0000013D VOL: 0
;    CSN=0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;    SPI_Write(0b10100000);
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;    SPI_Write(score);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;    CSN=1;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;    CE=1;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;    delay_us(500);
;PCODE: $00000148 VOL: 0
;    CE=0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;    RF_Write(0x07,0b01111110);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;    TX_Address(Send_Add);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;    RF_Command(0b11100001);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;}
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;
;void RX_Read(){
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;    CE=0;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;    CSN=1;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;    delay_us(10);
;PCODE: $0000015B VOL: 0
;    CSN=0;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;    SPI_Write(0b01100001);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;    delay_us(10);
;PCODE: $00000160 VOL: 0
;    score = SPI_Read();
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;    CSN=1;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;    CE=1;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;    RF_Command(0b11100010);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;}
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;
;#define reset PIND.1
;#define start PINB.7
;
;
;void main(){
; 0000 0015 void main(){
;PCODE: $00000170 VOL: 0
; 0000 0016     DDRD = 0b11001100;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0017     PORTD = 0b11111111;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0018     DDRB=0x00;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0019     PORTB=0xFF;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 001A 
; 0000 001B     Common_Config();
;PCODE: $00000179 VOL: 0
; 0000 001C     delay_us(10);
;PCODE: $0000017A VOL: 0
; 0000 001D     Common_Init();
;PCODE: $0000017B VOL: 0
; 0000 001E     delay_us(10);
;PCODE: $0000017C VOL: 0
; 0000 001F     TX_Config();
;PCODE: $0000017D VOL: 0
; 0000 0020     delay_us(10);
;PCODE: $0000017E VOL: 0
; 0000 0021     TX_Mode();
;PCODE: $0000017F VOL: 0
; 0000 0022 
; 0000 0023     #asm("sei")
;PCODE: $00000180 VOL: 0
	sei
;PCODE: $00000181 VOL: 0
; 0000 0024 
; 0000 0025 while (1){
;PCODE: $00000182 VOL: 0
; 0000 0026     if(reset == 0){
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0027         score = 10;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0028         TX_Send();
;PCODE: $00000188 VOL: 0
; 0000 0029     }
; 0000 002A     if(start == 0){
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 002B         score = 9;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 002C         TX_Send();
;PCODE: $0000018F VOL: 0
; 0000 002D     }
; 0000 002E }
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 002F }
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;
