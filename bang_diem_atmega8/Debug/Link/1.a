;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;#include <stdbool.h>
;
;#define LED_SEG             PORTB
;#define LED_A               PORTC.0
;#define LED_TIME1           PORTD.7
;#define LED_TIME2           PORTD.6
;#define LED_TIME3           PORTD.5
;#define LED_RED_SCORE1      PORTD.4
;#define LED_RED_SCORE2      PORTB.6
;#define LED_RED_SCORE3      PORTB.7
;#define LED_BLUE_SCORE1     PORTD.1
;#define LED_BLUE_SCORE2     PORTD.2
;#define LED_BLUE_SCORE3     PORTD.3
;
;#define CE                  PORTD.0
;#define CSN                 PORTC.1
;#define SCK                 PORTC.5
;#define MOSI                PORTC.2
;#define MISO                PINC.4
;#define IRQ                 PINC.3
;char Send_Add = 0xC0, Receive_Add = 0xB1, Salt_Add = 0xAB;
;int score;
;#include "rf.c"
;#define CONFIG      	0x00
;#define EN_AA       	0x01
;#define EN_RXADDR   	0x02
;#define SETUP_AW    	0x03
;#define SETUP_RETR  	0x04
;#define RF_CH       	0x05
;#define RF_SETUP    	0x06
;#define STATUS  		0x07
;#define OBSERVE_TX  	0x08
;#define RPD          	0x09
;#define RX_ADDR_P0  	0x0A
;#define RX_ADDR_P1  	0x0B
;#define RX_ADDR_P2  	0x0C
;#define RX_ADDR_P3  	0x0D
;#define RX_ADDR_P4  	0x0E
;#define RX_ADDR_P5  	0x0F
;#define TX_ADDR     	0x10
;#define RX_PW_P0    	0x11
;#define RX_PW_P1    	0x12
;#define RX_PW_P2    	0x13
;#define RX_PW_P3    	0x14
;#define RX_PW_P4    	0x15
;#define RX_PW_P5    	0x16
;#define FIFO_STATUS 	0x17
;#define DYNPD	    	0x1C
;#define FEATURE	    	0x1D
;
;void SPI_Write(unsigned char Buff){
; 0000 001B void SPI_Write(unsigned char Buff){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    unsigned char bit_ctr;
;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	Buff -> Y+1
;	bit_ctr -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;        MOSI = (Buff & 0x80);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;        delay_us(5);
;PCODE: $00000024 VOL: 0
;        Buff = (Buff << 1);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;        SCK = 1;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;        delay_us(5);
;PCODE: $0000002A VOL: 0
;        Buff |= MISO;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;        SCK = 0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;    }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;}
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;
;unsigned char SPI_Read(void){
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;    unsigned char Buff=0;
;    unsigned char bit_ctr;
;    for(bit_ctr=0;bit_ctr<8;bit_ctr++){
;PCODE: $0000003E VOL: 0
;	Buff -> R17
;	bit_ctr -> R16
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;        delay_us(5);
;PCODE: $0000004A VOL: 0
;        Buff = (Buff << 1);
;PCODE: $0000004B VOL: 0
;        SCK = 1;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;        delay_us(5);
;PCODE: $0000004E VOL: 0
;        Buff |= MISO;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;        SCK = 0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;    }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;    return(Buff);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;}
;PCODE: $0000005D VOL: 0
;
;
;void RF_Command(unsigned char command){
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;    CSN=0;
;PCODE: $00000060 VOL: 0
;	command -> Y+0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;    SPI_Write(command);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;    CSN=1;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;    delay_us(10);
;PCODE: $00000067 VOL: 0
;}
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;
;
;void RF_Write(unsigned char Reg_Add, unsigned char Value){
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;    CSN=0;
;PCODE: $0000006D VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;    SPI_Write(0b00100000|Reg_Add);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;    CSN=1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;    delay_us(10);
;PCODE: $00000078 VOL: 0
;}
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;
;void RF_Write_Add(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
;{
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;    CSN=0;
;PCODE: $0000007E VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;    SPI_Write(0b00100000|Reg_Add);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;    SPI_Write(Salt_Add);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;    SPI_Write(Value);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;    SPI_Write(Value);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;    SPI_Write(Value);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;    CSN=1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;    delay_us(10);
;PCODE: $00000091 VOL: 0
;}
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;
;void TX_Address(unsigned char Address){
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;    CSN=0;
;PCODE: $00000097 VOL: 0
;	Address -> Y+0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;    RF_Write(SETUP_AW,0b00000011);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;    CSN=1;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;    delay_us(10);
;PCODE: $000000A0 VOL: 0
;    CSN=0;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;    //RF_Write_Add(RX_ADDR_P0, Address);
;    RF_Write_Add(TX_ADDR, Address);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;}
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;
;void RX_Address(unsigned char Address){
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;    CSN=0;
;PCODE: $000000AC VOL: 0
;	Address -> Y+0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;    RF_Write(SETUP_AW,0b00000011);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;    CSN=1;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;    delay_us(10);
;PCODE: $000000B5 VOL: 0
;    CSN=0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;    RF_Write_Add(RX_ADDR_P0, Address);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;    //RF_Write_Add(RX_PW_P0, Address);
;}
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;
;
;void Common_Config(){
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;    CE=0;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;    CSN=1;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;    SCK=0;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;    delay_us(10);
;PCODE: $000000C7 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;    RF_Command(0b11100010);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;    RF_Write(CONFIG,0b00011111);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;    delay_ms(2);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;    RF_Write(FEATURE, 0b00000100);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;    RF_Write(RF_CH,0b00000010);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;	RF_Write(0x11,0b00000001);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;    RF_Write(RF_SETUP, 0b00000110);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;    RF_Write(DYNPD,0b00000001);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;    RF_Write(EN_RXADDR,0b00000001);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;}
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;
;void Common_Init(){
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;    CE=1;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;    delay_us(700);
;PCODE: $000000F7 VOL: 0
;    CE=0;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;    CSN=1;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;}
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;
;
;void TX_Mode(){
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;    CE=0;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;    RF_Write(CONFIG,0b00011110);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;}
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;
;void RX_Mode(){
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;    RF_Write(CONFIG,0b00011111);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;    CE=1;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;}
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;
;void TX_Config(){
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;    RF_Command(0b11100010);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;    TX_Address(Send_Add);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;}
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;
;void RX_Config(){
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;    RF_Command(0b11100010);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;    RX_Address(Receive_Add);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;}
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;
;void clear(){
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;    CSN=0;//nghe lenh
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;    delay_us(10);
;PCODE: $0000012E VOL: 0
;	RF_Write(STATUS,0x70);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;    RF_Write(CONFIG,0b00011110);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;	delay_us(10);
;PCODE: $00000137 VOL: 0
;    RF_Write(CONFIG,0b00011110);
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;    CSN=1;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;    delay_ms(10);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;}
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;
;void TX_Send(){
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;    TX_Address(Send_Add);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;    CSN=1;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;    delay_us(10);
;PCODE: $00000149 VOL: 0
;    CSN=0;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;    SPI_Write(0b11100001);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;    CSN=1;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;    delay_us(10);
;PCODE: $00000150 VOL: 0
;    CSN=0;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;    SPI_Write(0b10100000);
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;    SPI_Write(score);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;    CSN=1;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;    CE=1;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;    delay_us(500);
;PCODE: $0000015B VOL: 0
;    CE=0;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;    RF_Write(0x07,0b01111110);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;    TX_Address(Send_Add);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;    RF_Command(0b11100001);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;}
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;
;void RX_Read(){
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;    CE=0;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;    CSN=1;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;    delay_us(10);
;PCODE: $0000016E VOL: 0
;    CSN=0;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;    SPI_Write(0b01100001);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;    delay_us(10);
;PCODE: $00000173 VOL: 0
;    score = SPI_Read();
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;    CSN=1;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;    CE=1;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;    RF_Write(STATUS,0b01111110);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;    RF_Command(0b11100010);
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;}
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;
;unsigned char number[10] = {0xFE, 0xF0, 0xED, 0xF9, 0xF3, 0xDB, 0xDF, 0xF0, 0xFF, 0xFB};

	.DSEG
;unsigned char numberA[10] = {1, 0, 1, 1, 0, 1, 1, 1, 1, 1};
;unsigned char milisecond = 100, second = 180;
;unsigned char led = 1;
;unsigned char redScore = 0b0000;
;unsigned char blueScore = 0b0000;
;int redScores = 0, blueScores = 0;
;bool timeOut = true;
;int a;
;
;bool checkFinish(unsigned char input){
; 0000 0027 _Bool checkFinish(unsigned char input){

	.CSEG
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0028     if(input == 0b1111)
;PCODE: $00000185 VOL: 0
;	input -> Y+0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 0029         return true;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 002A     else
;PCODE: $0000018C VOL: 0
; 0000 002B         return false;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 002C }
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;
;void getScore(){
; 0000 002E void getScore(){
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 002F     if(score == 1){
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0030         blueScores += 2;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 0031         blueScore |= 0b0001;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0032     }
; 0000 0033     else if(score == 2){
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0034         blueScores += 3;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 0035         blueScore |= 0b0010;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0036     }
; 0000 0037     else if(score == 3){
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0038         blueScores += 5;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0039         blueScore |= 0b0100;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 003A     }
; 0000 003B     else if(score == 4){
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 003C         blueScores += 10;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 003D         blueScore |= 0b1000;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 003E     }
; 0000 003F     else if(score == 5){
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0040         redScores += 2;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0041         redScore |= 0b0001;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0042     }
; 0000 0043     else if(score == 6){
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 0044         redScores += 3;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0045         redScore |= 0b0010;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 0046     }
; 0000 0047     else if(score == 7){
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0048         redScores += 5;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0049         redScore |= 0b0100;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 004A     }
; 0000 004B     else if(score == 8){
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 004C         redScores += 10;
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 004D         redScore |= 0b1000;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 004E     }
; 0000 004F }
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;
;void stopGame(){
; 0000 0051 void stopGame(){
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0052     timeOut = true;
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0053     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (1<<TOIE0);
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0054 }
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;
;void startGame(){
; 0000 0056 void startGame(){
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 0057     timeOut = false;
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0058     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (1<<TOIE0);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 0059 }
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;
;void resetGame(){
; 0000 005B void resetGame(){
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 005C     WDTCR=0x18;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 005D     WDTCR=0x08;
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 005E     while(1);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 005F }
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
; 0000 0061 interrupt [10] void timer0_ovf_isr(void){
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0062     TCNT0=0x45;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0063     if(led == 1){
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0064         LED_SEG = number[second/100];
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0065         LED_A = numberA[second/100];
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0066         LED_TIME1 =         0;
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0067         LED_TIME2 =         1;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0068         LED_TIME3 =         1;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 0069         LED_RED_SCORE1 =    1;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 006A         LED_RED_SCORE2 =    1;
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 006B         LED_RED_SCORE3 =    1;
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 006C         LED_BLUE_SCORE1 =   1;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 006D         LED_BLUE_SCORE2 =   1;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 006E         LED_BLUE_SCORE3 =   1;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 006F 
; 0000 0070     }
; 0000 0071 
; 0000 0072     else if(led == 2){
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0073         LED_SEG = number[(second%100)/10];
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0074         LED_A = numberA[(second%100)/10];
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0075         LED_TIME1 =         1;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0076         LED_TIME2 =         0;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0077         LED_TIME3 =         1;
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0078         LED_RED_SCORE1 =    1;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 0079         LED_RED_SCORE2 =    1;
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 007A         LED_RED_SCORE3 =    1;
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 007B         LED_BLUE_SCORE1 =   1;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 007C         LED_BLUE_SCORE2 =   1;
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 007D         LED_BLUE_SCORE3 =   1;
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 007E     }
; 0000 007F 
; 0000 0080     else if(led == 3){
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0081         LED_SEG = number[second%10];
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
; 0000 0082         LED_A = numberA[second%10];
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0083         LED_TIME1 =         1;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 0084         LED_TIME2 =         1;
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 0085         LED_TIME3 =         0;
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0086         LED_RED_SCORE1 =    1;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0087         LED_RED_SCORE2 =    1;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 0088         LED_RED_SCORE3 =    1;
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 0089         LED_BLUE_SCORE1 =   1;
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 008A         LED_BLUE_SCORE2 =   1;
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 008B         LED_BLUE_SCORE3 =   1;
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 008C     }
; 0000 008D 
; 0000 008E     else if(led == 4){
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 008F         LED_SEG = number[redScores/100];
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 0090         LED_A = numberA[redScores/100];
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0091         LED_TIME1 =         1;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 0092         LED_TIME2 =         1;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 0093         LED_TIME3 =         1;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 0094         LED_RED_SCORE1 =    0;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0095         LED_RED_SCORE2 =    1;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 0096         LED_RED_SCORE3 =    1;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0097         LED_BLUE_SCORE1 =   1;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0098         LED_BLUE_SCORE2 =   1;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0099         LED_BLUE_SCORE3 =   1;
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 009A     }
; 0000 009B 
; 0000 009C     else if(led == 5){
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 009D         LED_SEG = number[(redScores%100)/10];
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 009E         LED_A = numberA[(redScores%100)/10];
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 009F         LED_TIME1 =         1;
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0000 00A0         LED_TIME2 =         1;
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 00A1         LED_TIME3 =         1;
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 00A2         LED_RED_SCORE1 =    1;
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 00A3         LED_RED_SCORE2 =    0;
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 00A4         LED_RED_SCORE3 =    1;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 00A5         LED_BLUE_SCORE1 =   1;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 00A6         LED_BLUE_SCORE2 =   1;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 00A7         LED_BLUE_SCORE3 =   1;
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
; 0000 00A8     }
; 0000 00A9 
; 0000 00AA     else if(led == 6){
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 00AB         LED_SEG = number[redScores%10];
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 00AC         LED_A = numberA[redScores%10];
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 00AD         LED_TIME1 =         1;
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 00AE         LED_TIME2 =         1;
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 00AF         LED_TIME3 =         1;
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 00B0         LED_RED_SCORE1 =    1;
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 00B1         LED_RED_SCORE2 =    1;
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 00B2         LED_RED_SCORE3 =    0;
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 00B3         LED_BLUE_SCORE1 =   1;
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 00B4         LED_BLUE_SCORE2 =   1;
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 00B5         LED_BLUE_SCORE3 =   1;
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 00B6     }
; 0000 00B7 
; 0000 00B8     else if(led == 7){
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 00B9         LED_SEG = number[blueScores/100];
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 00BA         LED_A = numberA[blueScores/100];
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 00BB         LED_TIME1 =         1;
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 00BC         LED_TIME2 =         1;
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 00BD         LED_TIME3 =         1;
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 00BE         LED_RED_SCORE1 =    1;
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 00BF         LED_RED_SCORE2 =    1;
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 00C0         LED_RED_SCORE3 =    1;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 00C1         LED_BLUE_SCORE1 =   0;
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 00C2         LED_BLUE_SCORE2 =   1;
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 00C3         LED_BLUE_SCORE3 =   1;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 00C4     }
; 0000 00C5 
; 0000 00C6     else if(led == 8){
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 00C7         LED_SEG = number[(blueScores%100)/10];
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 00C8         LED_A = numberA[(blueScores%100)/10];
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
; 0000 00C9         LED_TIME1 =         1;
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 00CA         LED_TIME2 =         1;
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 00CB         LED_TIME3 =         1;
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
; 0000 00CC         LED_RED_SCORE1 =    1;
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 00CD         LED_RED_SCORE2 =    1;
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 00CE         LED_RED_SCORE3 =    1;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 00CF         LED_BLUE_SCORE1 =   1;
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 00D0         LED_BLUE_SCORE2 =   0;
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 00D1         LED_BLUE_SCORE3 =   1;
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 00D2     }
; 0000 00D3 
; 0000 00D4     else if(led == 9){
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
; 0000 00D5         LED_SEG = number[blueScores%10];
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0000 00D6         LED_A = numberA[blueScores%10];
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
; 0000 00D7         LED_TIME1 =         1;
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 00D8         LED_TIME2 =         1;
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 00D9         LED_TIME3 =         1;
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
; 0000 00DA         LED_RED_SCORE1 =    1;
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 00DB         LED_RED_SCORE2 =    1;
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 00DC         LED_RED_SCORE3 =    1;
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 00DD         LED_BLUE_SCORE1 =   1;
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 00DE         LED_BLUE_SCORE2 =   1;
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
; 0000 00DF         LED_BLUE_SCORE3 =   0;
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 00E0         led = 0;
;PCODE: $000003AE VOL: 0
; 0000 00E1     }
; 0000 00E2 
; 0000 00E3     led++;
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 00E4 }
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;
;interrupt [TIM2_OVF] void timer2_interrupt(){
; 0000 00E6 interrupt [5] void timer2_interrupt(){
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 00E7     TCNT2 = 0xB2;
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 00E8     milisecond--;
;PCODE: $000003C0 VOL: 0
; 0000 00E9     a++;
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 00EA     if(a == 40)
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
; 0000 00EB         a = 0;
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0000 00EC 
; 0000 00ED     if(milisecond == 0){
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 00EE         second--;
;PCODE: $000003CD VOL: 0
; 0000 00EF         milisecond = 100;
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 00F0     }
; 0000 00F1     if(second == 0){
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 00F2         stopGame();
;PCODE: $000003D3 VOL: 0
; 0000 00F3     }
; 0000 00F4 }
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;
;void main(void){
; 0000 00F6 void main(void){
;PCODE: $000003D8 VOL: 0
; 0000 00F7 
; 0000 00F8 DDRB = 0xFF;
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 00F9 PORTB= 0x00;
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 00FA 
; 0000 00FB DDRD = 0xFF;
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 00FC PORTD= 0xFF;
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 00FD 
; 0000 00FE DDRC = 0x27;
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 00FF PORTC = 0x00;
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 0100 
; 0000 0101 //2.912ms
; 0000 0102 TCCR0=(0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 0103 TCNT0=0x45;
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 0104 
; 0000 0105 
; 0000 0106 //10ms
; 0000 0107 ASSR=0<<AS2;
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 0108 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0109 TCNT2=0xB2;
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 010A OCR2=0x00;
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 010B 
; 0000 010C 
; 0000 010D TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 010E 
; 0000 010F #asm("sei")
;PCODE: $000003F3 VOL: 0
	sei
;PCODE: $000003F4 VOL: 0
; 0000 0110 
; 0000 0111 Common_Config();
;PCODE: $000003F5 VOL: 0
; 0000 0112 delay_us(10);
;PCODE: $000003F6 VOL: 0
; 0000 0113 Common_Init();
;PCODE: $000003F7 VOL: 0
; 0000 0114 delay_us(10);
;PCODE: $000003F8 VOL: 0
; 0000 0115 RX_Config();
;PCODE: $000003F9 VOL: 0
; 0000 0116 delay_us(10);
;PCODE: $000003FA VOL: 0
; 0000 0117 RX_Mode();
;PCODE: $000003FB VOL: 0
; 0000 0118 
; 0000 0119 
; 0000 011A while (1){
;PCODE: $000003FC VOL: 0
; 0000 011B     if(IRQ == 0){
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 011C         RX_Read();
;PCODE: $00000400 VOL: 0
; 0000 011D         if(score == 9)
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 011E             resetGame();
;PCODE: $00000404 VOL: 0
; 0000 011F         else if(score == 10){
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 0120             startGame();
;PCODE: $0000040A VOL: 0
; 0000 0121             RX_Config();
;PCODE: $0000040B VOL: 0
; 0000 0122         }
; 0000 0123         if(!timeOut){
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 0124             getScore();
;PCODE: $00000411 VOL: 0
; 0000 0125             delay_ms(500);
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 0126         }
; 0000 0127 
; 0000 0128         if(checkFinish(redScore)){
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 0129             TIMSK = (0<<TOIE2) | (1<<TOIE0);
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 012A             redScores = 999;
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 012B             stopGame();
;PCODE: $0000041D VOL: 0
; 0000 012C         }
; 0000 012D         if(checkFinish(blueScore)){
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 012E             TIMSK = (0<<TOIE2) | (1<<TOIE0);
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 012F             blueScores = 999;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 0130             stopGame();
;PCODE: $00000427 VOL: 0
; 0000 0131         }
; 0000 0132     }
;PCODE: $00000428 VOL: 0
; 0000 0133     RX_Config();
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 0134 }
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 0135 }
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
